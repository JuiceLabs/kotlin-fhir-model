package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle37DataTest : DataTests() {
    @Test
    fun `questionnaire-profile-example-ussg-fht 406 Test`() {
        val json = File("./src/test/resources/model/sample_data/questionnaire-profile-example-ussg-fht.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", obj.entry[4].fullUrl))
        assertTrue(stringMatch("ValueSet", (obj.entry[4].resource!! as ValueSet).resourceType))
        assertTrue(stringMatch("LL361-7", (obj.entry[4].resource!! as ValueSet).id))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/St", (obj.entry[4].resource!! as ValueSet).meta!!.profile[0]))
        assertTrue(stringMatch("generated", (obj.entry[4].resource!! as ValueSet).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[4].resource!! as ValueSet).text!!.div))
        assertTrue(stringMatch("http://details.loinc.org/Answ", (obj.entry[4].resource!! as ValueSet).url))
        assertTrue(stringMatch("Y/N1", (obj.entry[4].resource!! as ValueSet).name))
        assertTrue(stringMatch("active", (obj.entry[4].resource!! as ValueSet).status))
        assertTrue(stringMatch("Regenstrief Institute, Inc an", (obj.entry[4].resource!! as ValueSet).publisher))
        assertTrue(stringMatch("Yes/No", (obj.entry[4].resource!! as ValueSet).description))
        assertEquals(true, if ((obj.entry[4].resource!! as ValueSet).immutable != null) (obj.entry[4].resource!! as ValueSet).immutable else false, "Field: (obj.entry[4].resource!! as ValueSet).immutable")
        assertTrue(stringMatch("Refer to https://loinc.org/te", (obj.entry[4].resource!! as ValueSet).copyright))
        assertEquals(false, if ((obj.entry[4].resource!! as ValueSet).extensible != null) (obj.entry[4].resource!! as ValueSet).extensible else false, "Field: (obj.entry[4].resource!! as ValueSet).extensible")
        assertTrue(stringMatch("http://loinc.org", (obj.entry[4].resource!! as ValueSet).compose!!.include[0].system))
        assertTrue(stringMatch("LA33-6", (obj.entry[4].resource!! as ValueSet).compose!!.include[0].concept[0].code))
        assertTrue(stringMatch("Yes", (obj.entry[4].resource!! as ValueSet).compose!!.include[0].concept[0].display))
        assertTrue(stringMatch("LA32-8", (obj.entry[4].resource!! as ValueSet).compose!!.include[0].concept[1].code))
        assertTrue(stringMatch("No", (obj.entry[4].resource!! as ValueSet).compose!!.include[0].concept[1].display))
        assertTrue(stringMatch("PUT", obj.entry[4].request!!.method))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", obj.entry[4].request!!.url))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", obj.entry[5].fullUrl))
        assertTrue(stringMatch("ValueSet", (obj.entry[5].resource!! as ValueSet).resourceType))
        assertTrue(stringMatch("LL629-7", (obj.entry[5].resource!! as ValueSet).id))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/St", (obj.entry[5].resource!! as ValueSet).meta!!.profile[0]))
        assertTrue(stringMatch("generated", (obj.entry[5].resource!! as ValueSet).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[5].resource!! as ValueSet).text!!.div))
        assertTrue(stringMatch("http://details.loinc.org/Answ", (obj.entry[5].resource!! as ValueSet).url))
        assertTrue(stringMatch("USSG-FHT race", (obj.entry[5].resource!! as ValueSet).name))
        assertTrue(stringMatch("active", (obj.entry[5].resource!! as ValueSet).status))
        assertTrue(stringMatch("Regenstrief Institute, Inc an", (obj.entry[5].resource!! as ValueSet).publisher))
        assertTrue(stringMatch("Family history tool race", (obj.entry[5].resource!! as ValueSet).description))
        assertEquals(true, if ((obj.entry[5].resource!! as ValueSet).immutable != null) (obj.entry[5].resource!! as ValueSet).immutable else false, "Field: (obj.entry[5].resource!! as ValueSet).immutable")
        assertTrue(stringMatch("Refer to https://loinc.org/te", (obj.entry[5].resource!! as ValueSet).copyright))
        assertEquals(false, if ((obj.entry[5].resource!! as ValueSet).extensible != null) (obj.entry[5].resource!! as ValueSet).extensible else false, "Field: (obj.entry[5].resource!! as ValueSet).extensible")
        assertTrue(stringMatch("http://loinc.org", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].system))
        assertTrue(stringMatch("LA10608-0", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[0].code))
        assertTrue(stringMatch("American  Indian or Alaska Na", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[0].display))
        assertTrue(stringMatch("LA6156-9", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[1].code))
        assertTrue(stringMatch("Asian", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[1].display))
        assertTrue(stringMatch("LA10614-8", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[2].code))
        assertTrue(stringMatch("-- Asian Indian", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[2].display))
        assertTrue(stringMatch("LA10615-5", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[3].code))
        assertTrue(stringMatch("-- Chinese", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[3].display))
        assertTrue(stringMatch("LA10616-3", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[4].code))
        assertTrue(stringMatch("-- Filipino", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[4].display))
        assertTrue(stringMatch("LA10617-1", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[5].code))
        assertTrue(stringMatch("-- Japanese", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[5].display))
        assertTrue(stringMatch("LA10618-9", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[6].code))
        assertTrue(stringMatch("-- Korean", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[6].display))
        assertTrue(stringMatch("LA10620-5", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[7].code))
        assertTrue(stringMatch("-- Vietnamese", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[7].display))
        assertTrue(stringMatch("LA10619-7", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[8].code))
        assertTrue(stringMatch("-- Other Asian", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[8].display))
        assertTrue(stringMatch("LA10610-6", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[9].code))
        assertTrue(stringMatch("Black or African American", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[9].display))
        assertTrue(stringMatch("LA10611-4", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[10].code))
        assertTrue(stringMatch("Native Hawaiian or Other Paci", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[10].display))
        assertTrue(stringMatch("LA10623-9", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[11].code))
        assertTrue(stringMatch("-- Native Hawaiian", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[11].display))
        assertTrue(stringMatch("LA10622-1", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[12].code))
        assertTrue(stringMatch("-- Guamanian", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[12].display))
        assertTrue(stringMatch("LA10621-3", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[13].code))
        assertTrue(stringMatch("-- Chamorro", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[13].display))
        assertTrue(stringMatch("LA10625-4", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[14].code))
        assertTrue(stringMatch("-- Samoan", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[14].display))
        assertTrue(stringMatch("LA10624-7", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[15].code))
        assertTrue(stringMatch("-- Other Pacific Islander", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[15].display))
        assertTrue(stringMatch("LA4457-3", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[16].code))
        assertTrue(stringMatch("White", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[16].display))
        assertTrue(stringMatch("LA10613-0", (obj.entry[5].resource!! as ValueSet).compose!!.include[0].concept[17].code))
    }
}
