package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle45DataTest : DataTests() {
    @Test
    fun `endpoint-examples-general-template 415 Test`() {
        val json = File("./src/test/resources/model/sample_data/endpoint-examples-general-template.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("hl7-fhir-rest", (obj.entry[1].resource!! as Endpoint).connectionType.code))
        assertTrue(stringMatch("Questionnaire Destination", (obj.entry[1].resource!! as Endpoint).name))
        assertTrue(stringMatch("Telstra Health", (obj.entry[1].resource!! as Endpoint).managingOrganization!!.display))
        assertTrue(stringMatch("QuestionnaireResponse", (obj.entry[1].resource!! as Endpoint).payloadType[0].coding[0].code))
        assertTrue(stringMatch("application/fhir+xml", (obj.entry[1].resource!! as Endpoint).payloadMimeType[0]))
        assertTrue(stringMatch("https://sqlonfhir-dstu2.azure", (obj.entry[1].resource!! as Endpoint).address))
        assertTrue(stringMatch("http://hl7.org/fhir/Endpoint/", obj.entry[2].fullUrl))
        assertTrue(stringMatch("Endpoint", (obj.entry[2].resource!! as Endpoint).resourceType))
        assertTrue(stringMatch("73", (obj.entry[2].resource!! as Endpoint).id))
        assertTrue(stringMatch("generated", (obj.entry[2].resource!! as Endpoint).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[2].resource!! as Endpoint).text!!.div))
        assertTrue(stringMatch("active", (obj.entry[2].resource!! as Endpoint).status))
        assertTrue(stringMatch("http://hl7.org/fhir/endpoint-", (obj.entry[2].resource!! as Endpoint).connectionType.system))
        assertTrue(stringMatch("hl7-fhir-rest", (obj.entry[2].resource!! as Endpoint).connectionType.code))
        assertTrue(stringMatch("Referral Requests", (obj.entry[2].resource!! as Endpoint).name))
        assertTrue(stringMatch("Telstra Health", (obj.entry[2].resource!! as Endpoint).managingOrganization!!.display))
        assertTrue(stringMatch("ReferralRequest", (obj.entry[2].resource!! as Endpoint).payloadType[0].coding[0].code))
        assertTrue(stringMatch("application/fhir+xml", (obj.entry[2].resource!! as Endpoint).payloadMimeType[0]))
        assertTrue(stringMatch("https://sqlonfhir-dstu2.azure", (obj.entry[2].resource!! as Endpoint).address))
        assertTrue(stringMatch("http://hl7.org/fhir/Endpoint/", obj.entry[3].fullUrl))
        assertTrue(stringMatch("Endpoint", (obj.entry[3].resource!! as Endpoint).resourceType))
        assertTrue(stringMatch("74", (obj.entry[3].resource!! as Endpoint).id))
        assertTrue(stringMatch("generated", (obj.entry[3].resource!! as Endpoint).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[3].resource!! as Endpoint).text!!.div))
        assertTrue(stringMatch("active", (obj.entry[3].resource!! as Endpoint).status))
        assertTrue(stringMatch("http://hl7.org/fhir/endpoint-", (obj.entry[3].resource!! as Endpoint).connectionType.system))
        assertTrue(stringMatch("hl7-fhir-rest", (obj.entry[3].resource!! as Endpoint).connectionType.code))
        assertTrue(stringMatch("Referral Requests", (obj.entry[3].resource!! as Endpoint).name))
        assertTrue(stringMatch("Epic demo organization", (obj.entry[3].resource!! as Endpoint).managingOrganization!!.display))
        assertTrue(stringMatch("ReferralRequest Questionnaire", (obj.entry[3].resource!! as Endpoint).payloadType[0].coding[0].code))
        assertTrue(stringMatch("application/fhir+json", (obj.entry[3].resource!! as Endpoint).payloadMimeType[0]))
        assertTrue(stringMatch("https://open.epic.com/Interfa", (obj.entry[3].resource!! as Endpoint).address))
        assertTrue(stringMatch("http://hl7.org/fhir/Endpoint/", obj.entry[4].fullUrl))
        assertTrue(stringMatch("Endpoint", (obj.entry[4].resource!! as Endpoint).resourceType))
        assertTrue(stringMatch("75", (obj.entry[4].resource!! as Endpoint).id))
        assertTrue(stringMatch("generated", (obj.entry[4].resource!! as Endpoint).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[4].resource!! as Endpoint).text!!.div))
        assertTrue(stringMatch("active", (obj.entry[4].resource!! as Endpoint).status))
        assertTrue(stringMatch("http://hl7.org/fhir/endpoint-", (obj.entry[4].resource!! as Endpoint).connectionType.system))
        assertTrue(stringMatch("secure-email", (obj.entry[4].resource!! as Endpoint).connectionType.code))
        assertTrue(stringMatch("Subscription receiver", (obj.entry[4].resource!! as Endpoint).name))
        assertTrue(stringMatch("Telstra Health", (obj.entry[4].resource!! as Endpoint).managingOrganization!!.display))
        assertTrue(stringMatch("ReferralRequest", (obj.entry[4].resource!! as Endpoint).payloadType[0].coding[0].code))
        assertTrue(stringMatch("application/fhir+xml", (obj.entry[4].resource!! as Endpoint).payloadMimeType[0]))
        assertTrue(stringMatch("mailto:subscriptions@example.", (obj.entry[4].resource!! as Endpoint).address))
        assertTrue(stringMatch("http://hl7.org/fhir/Endpoint/", obj.entry[5].fullUrl))
        assertTrue(stringMatch("Endpoint", (obj.entry[5].resource!! as Endpoint).resourceType))
        assertTrue(stringMatch("76", (obj.entry[5].resource!! as Endpoint).id))
        assertTrue(stringMatch("generated", (obj.entry[5].resource!! as Endpoint).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[5].resource!! as Endpoint).text!!.div))
        assertTrue(stringMatch("active", (obj.entry[5].resource!! as Endpoint).status))
        assertTrue(stringMatch("http://hl7.org/fhir/endpoint-", (obj.entry[5].resource!! as Endpoint).connectionType.system))
        assertTrue(stringMatch("hl7-fhir-msg", (obj.entry[5].resource!! as Endpoint).connectionType.code))
        assertTrue(stringMatch("valid usecase?", (obj.entry[5].resource!! as Endpoint).name))
        assertTrue(stringMatch("Telstra Health", (obj.entry[5].resource!! as Endpoint).managingOrganization!!.display))
        assertTrue(stringMatch("CDA-EventSummary", (obj.entry[5].resource!! as Endpoint).payloadType[0].coding[0].code))
        assertTrue(stringMatch("PDF", (obj.entry[5].resource!! as Endpoint).payloadMimeType[0]))
        assertTrue(stringMatch("https://sqlonfhir-dstu2.azure", (obj.entry[5].resource!! as Endpoint).address))
        assertTrue(stringMatch("http://hl7.org/fhir/Endpoint/", obj.entry[6].fullUrl))
        assertTrue(stringMatch("Endpoint", (obj.entry[6].resource!! as Endpoint).resourceType))
        assertTrue(stringMatch("77", (obj.entry[6].resource!! as Endpoint).id))
        assertTrue(stringMatch("generated", (obj.entry[6].resource!! as Endpoint).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[6].resource!! as Endpoint).text!!.div))
        assertTrue(stringMatch("active", (obj.entry[6].resource!! as Endpoint).status))
        assertTrue(stringMatch("http://hl7.org/fhir/endpoint-", (obj.entry[6].resource!! as Endpoint).connectionType.system))
        assertTrue(stringMatch("hl7v2-mllp", (obj.entry[6].resource!! as Endpoint).connectionType.code))
        assertTrue(stringMatch("v2 referral Requests", (obj.entry[6].resource!! as Endpoint).name))
        assertTrue(stringMatch("Epic demo organization", (obj.entry[6].resource!! as Endpoint).managingOrganization!!.display))
        assertTrue(stringMatch("REF-I12", (obj.entry[6].resource!! as Endpoint).payloadType[0].coding[0].code))
        assertTrue(stringMatch("HL7v2", (obj.entry[6].resource!! as Endpoint).payloadMimeType[0]))
        assertTrue(stringMatch("127.0.0.1", (obj.entry[6].resource!! as Endpoint).address))
    }
}
