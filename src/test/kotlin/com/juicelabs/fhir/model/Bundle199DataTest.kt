package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle199DataTest : DataTests() {
    @Test
    fun `diagnosticreport-examples-general 572 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-examples-general.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("%.2f".format(2.8f), "%.2f".format(((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mg/L", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(1.0f), "%.2f".format(((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mg/L", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(3.0f), "%.2f".format(((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mg/L", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://acme.com/lab/reports", (obj.entry[16].resource!! as DiagnosticReport).identifier[0].system))
        assertTrue(stringMatch("23412355", (obj.entry[16].resource!! as DiagnosticReport).identifier[0].value))
        assertTrue(stringMatch("final", (obj.entry[16].resource!! as DiagnosticReport).status))
        assertTrue(stringMatch("http://acme.com/labs/reports", (obj.entry[16].resource!! as DiagnosticReport).code.coding[0].system))
        assertTrue(stringMatch("bchem2", (obj.entry[16].resource!! as DiagnosticReport).code.coding[0].code))
        assertTrue(stringMatch("Specialist Biochemistry", (obj.entry[16].resource!! as DiagnosticReport).code.coding[0].display))
        assertTrue(stringMatch("Patient/1", (obj.entry[16].resource!! as DiagnosticReport).subject!!.reference))
        assertEquals("2012-05-21T10:45:00Z", (obj.entry[16].resource!! as DiagnosticReport).effectiveDateTime.toString())
        assertEquals("2012-05-23T14:27:01Z", (obj.entry[16].resource!! as DiagnosticReport).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.entry[16].resource!! as DiagnosticReport).performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.entry[16].resource!! as DiagnosticReport).performer[0].actor.display))
        assertTrue(stringMatch("#o1", (obj.entry[16].resource!! as DiagnosticReport).result[0].reference))
    }

    @Test
    fun `patient-examples-general 573 Test`() {
        val json = File("./src/test/resources/model/sample_data/patient-examples-general.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("Bundle", obj.resourceType))
        assertTrue(stringMatch("b248b1b2-1686-4b94-9936-37d7a", obj.id))
        assertEquals("2012-05-29T23:45:32Z", obj.meta!!.lastUpdated.toString())
        assertTrue(stringMatch("collection", obj.type))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/1", obj.entry[0].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[0].resource!! as Patient).resourceType))
        assertTrue(stringMatch("1", (obj.entry[0].resource!! as Patient).id))
        assertEquals("2012-05-29T23:45:32Z", (obj.entry[0].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[0].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[0].resource!! as Patient).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[0].resource!! as Patient).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[0].resource!! as Patient).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("http://hl7.org/fhir/sid/us-ss", (obj.entry[0].resource!! as Patient).identifier[0].system))
        assertTrue(stringMatch("444222222", (obj.entry[0].resource!! as Patient).identifier[0].value))
        assertEquals(true, if ((obj.entry[0].resource!! as Patient).active != null) (obj.entry[0].resource!! as Patient).active else false, "Field: (obj.entry[0].resource!! as Patient).active")
        assertTrue(stringMatch("official", (obj.entry[0].resource!! as Patient).name[0].use))
        assertTrue(stringMatch("Everywoman", (obj.entry[0].resource!! as Patient).name[0].family))
        assertTrue(stringMatch("Eve", (obj.entry[0].resource!! as Patient).name[0].given[0]))
        assertTrue(stringMatch("phone", (obj.entry[0].resource!! as Patient).telecom[0].system))
        assertTrue(stringMatch("555-555-2003", (obj.entry[0].resource!! as Patient).telecom[0].value))
        assertTrue(stringMatch("work", (obj.entry[0].resource!! as Patient).telecom[0].use))
        assertTrue(stringMatch("female", (obj.entry[0].resource!! as Patient).gender))
        assertEquals("1973-05-31", (obj.entry[0].resource!! as Patient).birthDate.toString())
        assertTrue(stringMatch("home", (obj.entry[0].resource!! as Patient).address[0].use))
        assertTrue(stringMatch("2222 Home Street", (obj.entry[0].resource!! as Patient).address[0].line[0]))
        assertTrue(stringMatch("Organization/hl7", (obj.entry[0].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/2", obj.entry[1].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[1].resource!! as Patient).resourceType))
        assertTrue(stringMatch("2", (obj.entry[1].resource!! as Patient).id))
        assertEquals("2012-05-29T23:45:32Z", (obj.entry[1].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[1].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[1].resource!! as Patient).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[1].resource!! as Patient).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[1].resource!! as Patient).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("http://hl7.org/fhir/sid/us-ss", (obj.entry[1].resource!! as Patient).identifier[0].system))
        assertTrue(stringMatch("444333333", (obj.entry[1].resource!! as Patient).identifier[0].value))
        assertEquals(true, if ((obj.entry[1].resource!! as Patient).active != null) (obj.entry[1].resource!! as Patient).active else false, "Field: (obj.entry[1].resource!! as Patient).active")
        assertTrue(stringMatch("official", (obj.entry[1].resource!! as Patient).name[0].use))
        assertTrue(stringMatch("Everyman", (obj.entry[1].resource!! as Patient).name[0].family))
        assertTrue(stringMatch("Adam", (obj.entry[1].resource!! as Patient).name[0].given[0]))
        assertTrue(stringMatch("phone", (obj.entry[1].resource!! as Patient).telecom[0].system))
        assertTrue(stringMatch("555-555-2004", (obj.entry[1].resource!! as Patient).telecom[0].value))
        assertTrue(stringMatch("work", (obj.entry[1].resource!! as Patient).telecom[0].use))
        assertTrue(stringMatch("male", (obj.entry[1].resource!! as Patient).gender))
        assertTrue(stringMatch("home", (obj.entry[1].resource!! as Patient).address[0].use))
        assertTrue(stringMatch("2222 Home Street", (obj.entry[1].resource!! as Patient).address[0].line[0]))
        assertTrue(stringMatch("Organization/hl7", (obj.entry[1].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/3", obj.entry[2].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[2].resource!! as Patient).resourceType))
        assertTrue(stringMatch("3", (obj.entry[2].resource!! as Patient).id))
        assertEquals("2012-05-29T23:45:32Z", (obj.entry[2].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[2].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[2].resource!! as Patient).text!!.div))
    }
}
