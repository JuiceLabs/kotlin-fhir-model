package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle194DataTest : DataTests() {
    @Test
    fun `diagnosticreport-examples-general 567 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-examples-general.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("SERUM CHEMISTRY", (obj.entry[13].resource!! as DiagnosticReport).code.text))
        assertTrue(stringMatch("Patient/4", (obj.entry[13].resource!! as DiagnosticReport).subject!!.reference))
        assertEquals("2004-12-05T07:15:17Z", (obj.entry[13].resource!! as DiagnosticReport).effectiveDateTime.toString())
        assertEquals("2005-02-23T10:04:01Z", (obj.entry[13].resource!! as DiagnosticReport).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.entry[13].resource!! as DiagnosticReport).performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.entry[13].resource!! as DiagnosticReport).performer[0].actor.display))
        assertTrue(stringMatch("#o1", (obj.entry[13].resource!! as DiagnosticReport).result[0].reference))
        assertTrue(stringMatch("#o2", (obj.entry[13].resource!! as DiagnosticReport).result[1].reference))
        assertTrue(stringMatch("#o3", (obj.entry[13].resource!! as DiagnosticReport).result[2].reference))
        assertTrue(stringMatch("#o4", (obj.entry[13].resource!! as DiagnosticReport).result[3].reference))
        assertTrue(stringMatch("#o5", (obj.entry[13].resource!! as DiagnosticReport).result[4].reference))
        assertTrue(stringMatch("#o6", (obj.entry[13].resource!! as DiagnosticReport).result[5].reference))
        assertTrue(stringMatch("#o7", (obj.entry[13].resource!! as DiagnosticReport).result[6].reference))
        assertTrue(stringMatch("#o8", (obj.entry[13].resource!! as DiagnosticReport).result[7].reference))
        assertTrue(stringMatch("#o9", (obj.entry[13].resource!! as DiagnosticReport).result[8].reference))
        assertTrue(stringMatch("#o10", (obj.entry[13].resource!! as DiagnosticReport).result[9].reference))
        assertTrue(stringMatch("#o11", (obj.entry[13].resource!! as DiagnosticReport).result[10].reference))
        assertTrue(stringMatch("#o12", (obj.entry[13].resource!! as DiagnosticReport).result[11].reference))
        assertTrue(stringMatch("#o13", (obj.entry[13].resource!! as DiagnosticReport).result[12].reference))
        assertTrue(stringMatch("#o14", (obj.entry[13].resource!! as DiagnosticReport).result[13].reference))
        assertTrue(stringMatch("#o15", (obj.entry[13].resource!! as DiagnosticReport).result[14].reference))
        assertTrue(stringMatch("#o16", (obj.entry[13].resource!! as DiagnosticReport).result[15].reference))
        assertTrue(stringMatch("#o17", (obj.entry[13].resource!! as DiagnosticReport).result[16].reference))
        assertTrue(stringMatch("#o18", (obj.entry[13].resource!! as DiagnosticReport).result[17].reference))
        assertTrue(stringMatch("#o19", (obj.entry[13].resource!! as DiagnosticReport).result[18].reference))
        assertTrue(stringMatch("#o20", (obj.entry[13].resource!! as DiagnosticReport).result[19].reference))
        assertTrue(stringMatch("#o21", (obj.entry[13].resource!! as DiagnosticReport).result[20].reference))
        assertTrue(stringMatch("#o22", (obj.entry[13].resource!! as DiagnosticReport).result[21].reference))
        assertTrue(stringMatch("#o23", (obj.entry[13].resource!! as DiagnosticReport).result[22].reference))
        assertTrue(stringMatch("#o24", (obj.entry[13].resource!! as DiagnosticReport).result[23].reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Diagnosti", obj.entry[14].fullUrl))
        assertTrue(stringMatch("DiagnosticReport", (obj.entry[14].resource!! as DiagnosticReport).resourceType))
        assertTrue(stringMatch("25", (obj.entry[14].resource!! as DiagnosticReport).id))
        assertEquals("2012-04-14T10:35:23Z", (obj.entry[14].resource!! as DiagnosticReport).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[14].resource!! as DiagnosticReport).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[14].resource!! as DiagnosticReport).text!!.div))
        assertTrue(stringMatch("Observation", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).resourceType))
        assertTrue(stringMatch("o1", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).id))
        assertTrue(stringMatch("final", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].system))
        assertTrue(stringMatch("11475-1", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Microorganism identified in U", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/5", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).performer[0].display))
        assertTrue(stringMatch("KLEBSIELLA PNEUMONIAE", ((obj.entry[14].resource!! as DiagnosticReport).contained[0] as Observation).valueCodeableConcept!!.text))
        assertTrue(stringMatch("Observation", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).resourceType))
        assertTrue(stringMatch("o2", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).id))
        assertTrue(stringMatch("final", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).code.coding[0].system))
        assertTrue(stringMatch("43161-9", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Microorganism [#/volume] in U", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/5", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20000f), "%.2f".format(((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("CFU/ML", ((obj.entry[14].resource!! as DiagnosticReport).contained[1] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("Observation", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).resourceType))
        assertTrue(stringMatch("o3", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).id))
        assertTrue(stringMatch("final", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).status))
        assertTrue(stringMatch("http://example.org/local", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).code.coding[0].system))
        assertTrue(stringMatch("AMS", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).code.coding[0].code))
        assertTrue(stringMatch("AMPICILLIN/SULBACTAM", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/5", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(4f), "%.2f".format(((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("U", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("S", ((obj.entry[14].resource!! as DiagnosticReport).contained[2] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("Observation", ((obj.entry[14].resource!! as DiagnosticReport).contained[3] as Observation).resourceType))
    }
}
