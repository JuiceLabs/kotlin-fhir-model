package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle17DataTest : DataTests() {
    @Test
    fun `practitioner-examples-general 381 Test`() {
        val json = File("./src/test/resources/model/sample_data/practitioner-examples-general.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("555-555-1060", (obj.entry[57].resource!! as Practitioner).telecom[0].value))
        assertTrue(stringMatch("work", (obj.entry[57].resource!! as Practitioner).telecom[0].use))
        assertTrue(stringMatch("home", (obj.entry[57].resource!! as Practitioner).address[0].use))
        assertTrue(stringMatch("1058 Healthcare Drive", (obj.entry[57].resource!! as Practitioner).address[0].line[0]))
        assertTrue(stringMatch("male", (obj.entry[57].resource!! as Practitioner).gender))
        assertTrue(stringMatch("http://hl7.org/fhir/Practitio", obj.entry[58].fullUrl))
        assertTrue(stringMatch("Practitioner", (obj.entry[58].resource!! as Practitioner).resourceType))
        assertTrue(stringMatch("70", (obj.entry[58].resource!! as Practitioner).id))
        assertEquals("2012-05-29T23:45:32Z", (obj.entry[58].resource!! as Practitioner).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[58].resource!! as Practitioner).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[58].resource!! as Practitioner).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[58].resource!! as Practitioner).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[58].resource!! as Practitioner).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("http://hl7.org/fhir/sid/us-ss", (obj.entry[58].resource!! as Practitioner).identifier[0].system))
        assertTrue(stringMatch("333777777", (obj.entry[58].resource!! as Practitioner).identifier[0].value))
        assertTrue(stringMatch("official", (obj.entry[58].resource!! as Practitioner).name[0].use))
        assertTrue(stringMatch("Enter", (obj.entry[58].resource!! as Practitioner).name[0].family))
        assertTrue(stringMatch("Ellen", (obj.entry[58].resource!! as Practitioner).name[0].given[0]))
        assertTrue(stringMatch("phone", (obj.entry[58].resource!! as Practitioner).telecom[0].system))
        assertTrue(stringMatch("555-555-1020", (obj.entry[58].resource!! as Practitioner).telecom[0].value))
        assertTrue(stringMatch("work", (obj.entry[58].resource!! as Practitioner).telecom[0].use))
        assertTrue(stringMatch("home", (obj.entry[58].resource!! as Practitioner).address[0].use))
        assertTrue(stringMatch("1058 Healthcare Drive", (obj.entry[58].resource!! as Practitioner).address[0].line[0]))
        assertTrue(stringMatch("female", (obj.entry[58].resource!! as Practitioner).gender))
    }

    @Test
    fun `diagnosticreport-hla-genetics-results-example 382 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-hla-genetics-results-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("Bundle", obj.resourceType))
        assertTrue(stringMatch("hla-1", obj.id))
        assertTrue(stringMatch("transaction", obj.type))
        assertTrue(stringMatch("urn:uuid:b0a4b18e-94e7-4b1b-8", obj.entry[0].fullUrl))
        assertTrue(stringMatch("DiagnosticReport", (obj.entry[0].resource!! as DiagnosticReport).resourceType))
        assertTrue(stringMatch("generated", (obj.entry[0].resource!! as DiagnosticReport).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[0].resource!! as DiagnosticReport).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/Structure", (obj.entry[0].resource!! as DiagnosticReport).extension[0].url))
        assertTrue(stringMatch("http://www.ebi.ac.uk/ipd/imgt", (obj.entry[0].resource!! as DiagnosticReport).extension[0].valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("3.23", (obj.entry[0].resource!! as DiagnosticReport).extension[0].valueCodeableConcept!!.coding[0].version))
        assertTrue(stringMatch("IMGT/HLA 3.23", (obj.entry[0].resource!! as DiagnosticReport).extension[0].valueCodeableConcept!!.text))
        assertTrue(stringMatch("http://hl7.org/fhir/Structure", (obj.entry[0].resource!! as DiagnosticReport).extension[1].url))
        assertTrue(stringMatch("text", (obj.entry[0].resource!! as DiagnosticReport).extension[1].extension[0].url))
        assertTrue(stringMatch("HLA-A:01:01G+HLA-A*01:02^HLA-", (obj.entry[0].resource!! as DiagnosticReport).extension[1].extension[0].valueString))
        assertTrue(stringMatch("uri", (obj.entry[0].resource!! as DiagnosticReport).extension[1].extension[1].url))
        assertTrue(stringMatch("https://gl.nmdp.org/imgt-hla/", (obj.entry[0].resource!! as DiagnosticReport).extension[1].extension[1].valueUri))
        assertTrue(stringMatch("http://hl7.org/fhir/Structure", (obj.entry[0].resource!! as DiagnosticReport).extension[2].url))
        assertTrue(stringMatch("http://www.ncbi.nlm.nih.gov/g", (obj.entry[0].resource!! as DiagnosticReport).extension[2].valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("GTR000000000.0", (obj.entry[0].resource!! as DiagnosticReport).extension[2].valueCodeableConcept!!.coding[0].code))
        assertTrue(stringMatch("Next Generation Sequencing of", (obj.entry[0].resource!! as DiagnosticReport).extension[2].valueCodeableConcept!!.text))
        assertTrue(stringMatch("ProcedureRequest/123", (obj.entry[0].resource!! as DiagnosticReport).basedOn[0].reference))
        assertTrue(stringMatch("final", (obj.entry[0].resource!! as DiagnosticReport).status))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", (obj.entry[0].resource!! as DiagnosticReport).category!!.coding[0].system))
        assertTrue(stringMatch("GE", (obj.entry[0].resource!! as DiagnosticReport).category!!.coding[0].code))
        assertTrue(stringMatch("Genetics", (obj.entry[0].resource!! as DiagnosticReport).category!!.coding[0].display))
        assertTrue(stringMatch("http://loinc.org", (obj.entry[0].resource!! as DiagnosticReport).code.coding[0].system))
        assertTrue(stringMatch("13303-3", (obj.entry[0].resource!! as DiagnosticReport).code.coding[0].code))
        assertTrue(stringMatch("HLA-A+​B+​C (class I) [Type]", (obj.entry[0].resource!! as DiagnosticReport).code.coding[0].display))
        assertTrue(stringMatch("Patient/119", (obj.entry[0].resource!! as DiagnosticReport).subject!!.reference))
        assertTrue(stringMatch("Mary Chalmers", (obj.entry[0].resource!! as DiagnosticReport).subject!!.display))
        assertEquals("2016-12-15", (obj.entry[0].resource!! as DiagnosticReport).effectiveDateTime.toString())
        assertEquals("2016-12-15T14:15:30-06:00", (obj.entry[0].resource!! as DiagnosticReport).issued.toString())
        assertTrue(stringMatch("Organization/68", (obj.entry[0].resource!! as DiagnosticReport).performer[0].actor.reference))
        assertTrue(stringMatch("aTypingLab Inc", (obj.entry[0].resource!! as DiagnosticReport).performer[0].actor.display))
        assertTrue(stringMatch("Specimen/67", (obj.entry[0].resource!! as DiagnosticReport).specimen[0].reference))
        assertTrue(stringMatch("buccal swab from Mary Chalmer", (obj.entry[0].resource!! as DiagnosticReport).specimen[0].display))
        assertTrue(stringMatch("urn:uuid:49a86246-4004-42eb-9", (obj.entry[0].resource!! as DiagnosticReport).result[0].reference))
        assertTrue(stringMatch("HLA-A: HLA-A:01:01G+HLA-A*01:", (obj.entry[0].resource!! as DiagnosticReport).result[0].display))
        assertTrue(stringMatch("urn:uuid:60613a43-c4cb-4502-b", (obj.entry[0].resource!! as DiagnosticReport).result[1].reference))
        assertTrue(stringMatch("HLA-B: HLA-B*15:01:01G+HLA-B*", (obj.entry[0].resource!! as DiagnosticReport).result[1].display))
        assertTrue(stringMatch("urn:uuid:0e0a780e-4486-4cd0-b", (obj.entry[0].resource!! as DiagnosticReport).result[2].reference))
        assertTrue(stringMatch("HLA-C: HLA-C*01:02:01G+HLA-C*", (obj.entry[0].resource!! as DiagnosticReport).result[2].display))
        assertTrue(stringMatch("POST", obj.entry[0].request!!.method))
        assertTrue(stringMatch("DiagnosticReport", obj.entry[0].request!!.url))
        assertTrue(stringMatch("urn:uuid:8200dab6-18a2-4550-b", obj.entry[1].fullUrl))
        assertTrue(stringMatch("Sequence", (obj.entry[1].resource!! as Sequence).resourceType))
        assertTrue(stringMatch("generated", (obj.entry[1].resource!! as Sequence).text!!.status))
    }
}
