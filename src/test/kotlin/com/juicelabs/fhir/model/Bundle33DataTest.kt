package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle33DataTest : DataTests() {
    @Test
    fun `questionnaire-profile-example-ussg-fht 402 Test`() {
        val json = File("./src/test/resources/model/sample_data/questionnaire-profile-example-ussg-fht.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("urn:iso:std:iso:3166", (obj.entry[1].resource!! as Questionnaire).jurisdiction[0].coding[0].system))
        assertTrue(stringMatch("US", (obj.entry[1].resource!! as Questionnaire).jurisdiction[0].coding[0].code))
        assertTrue(stringMatch("url", (obj.entry[1].resource!! as Questionnaire).contact[0].telecom[0].system))
        assertTrue(stringMatch("http://loinc.org", (obj.entry[1].resource!! as Questionnaire).contact[0].telecom[0].value))
        assertTrue(stringMatch("(c) 2015 Regenstrief Institut", (obj.entry[1].resource!! as Questionnaire).copyright))
        assertTrue(stringMatch("http://loinc.org", (obj.entry[1].resource!! as Questionnaire).code[0].system))
        assertTrue(stringMatch("54127-6", (obj.entry[1].resource!! as Questionnaire).code[0].code))
        assertTrue(stringMatch("US Surgeon General family hea", (obj.entry[1].resource!! as Questionnaire).code[0].display))
        assertTrue(stringMatch("Patient", (obj.entry[1].resource!! as Questionnaire).subjectType[0]))
        assertTrue(stringMatch("0", (obj.entry[1].resource!! as Questionnaire).item[0].linkId))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[0].type))
        assertTrue(stringMatch("0.1", (obj.entry[1].resource!! as Questionnaire).item[0].item[0].linkId))
        assertTrue(stringMatch("Date Done", (obj.entry[1].resource!! as Questionnaire).item[0].item[0].text))
        assertTrue(stringMatch("date", (obj.entry[1].resource!! as Questionnaire).item[0].item[0].type))
        assertTrue(stringMatch("0.2", (obj.entry[1].resource!! as Questionnaire).item[0].item[1].linkId))
        assertTrue(stringMatch("Time Done", (obj.entry[1].resource!! as Questionnaire).item[0].item[1].text))
        assertTrue(stringMatch("time", (obj.entry[1].resource!! as Questionnaire).item[0].item[1].type))
        assertTrue(stringMatch("0.3", (obj.entry[1].resource!! as Questionnaire).item[0].item[2].linkId))
        assertTrue(stringMatch("Where Done", (obj.entry[1].resource!! as Questionnaire).item[0].item[2].text))
        assertTrue(stringMatch("string", (obj.entry[1].resource!! as Questionnaire).item[0].item[2].type))
        assertTrue(stringMatch("0.4", (obj.entry[1].resource!! as Questionnaire).item[0].item[3].linkId))
        assertTrue(stringMatch("Comment", (obj.entry[1].resource!! as Questionnaire).item[0].item[3].text))
        assertTrue(stringMatch("string", (obj.entry[1].resource!! as Questionnaire).item[0].item[3].type))
        assertTrue(stringMatch("1", (obj.entry[1].resource!! as Questionnaire).item[1].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].definition))
        assertTrue(stringMatch("Your health information", (obj.entry[1].resource!! as Questionnaire).item[1].text))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[1].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].required != null) (obj.entry[1].resource!! as Questionnaire).item[1].required else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].required")
        assertTrue(stringMatch("1.1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].linkId))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].type))
        assertTrue(stringMatch("1.1.1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[0].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[0].definition))
        assertTrue(stringMatch("Name", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[0].text))
        assertTrue(stringMatch("string", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[0].type))
        assertEquals(200, (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[0].maxLength)
        assertTrue(stringMatch("1.1.2", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].definition))
        assertTrue(stringMatch("Gender", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].required != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].required else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].required")
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].options!!.reference))
        assertTrue(stringMatch("Gender_M/F", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].options!!.display))
        assertTrue(stringMatch("1.1.2.1.1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].item[0].linkId))
        assertTrue(stringMatch("Please specify", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].item[0].text))
        assertTrue(stringMatch("string", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].item[0].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].item[0].required != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].item[0].required else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[1].item[0].required")
        assertTrue(stringMatch("1.1.3", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[2].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[2].definition))
        assertTrue(stringMatch("Date of Birth", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[2].text))
        assertTrue(stringMatch("date", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[2].type))
        assertTrue(stringMatch("1.1.4", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].definition))
        assertTrue(stringMatch("Were you born a twin?", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].type))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].options!!.reference))
        assertTrue(stringMatch("USSG-FHT twin", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].options!!.display))
        assertTrue(stringMatch("http://loinc.org", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].initialCoding!!.system))
        assertTrue(stringMatch("LA32-8", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].initialCoding!!.code))
        assertTrue(stringMatch("No", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[3].initialCoding!!.display))
        assertTrue(stringMatch("1.1.5", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[4].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[4].definition))
        assertTrue(stringMatch("Were you adopted?", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[4].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[4].type))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[4].options!!.reference))
        assertTrue(stringMatch("Y/N1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[4].options!!.display))
        assertTrue(stringMatch("1.1.6", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[5].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[5].definition))
        assertTrue(stringMatch("Are your parents related to e", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[5].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[5].type))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[5].options!!.reference))
        assertTrue(stringMatch("Y/N1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[5].options!!.display))
    }
}
