package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class DiagnosticReportDataTest : DataTests() {
    @Test
    fun `diagnosticreport-example-f202-bloodculture 218 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-f202-bloodculture.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("f202", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("ProcedureRequest", (obj.contained[0] as ProcedureRequest).resourceType))
        assertTrue(stringMatch("req", (obj.contained[0] as ProcedureRequest).id))
        assertTrue(stringMatch("active", (obj.contained[0] as ProcedureRequest).status))
        assertTrue(stringMatch("original-order", (obj.contained[0] as ProcedureRequest).intent))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[0] as ProcedureRequest).code.coding[0].system))
        assertTrue(stringMatch("104177005", (obj.contained[0] as ProcedureRequest).code.coding[0].code))
        assertTrue(stringMatch("Blood culture for bacteria, i", (obj.contained[0] as ProcedureRequest).code.coding[0].display))
        assertTrue(stringMatch("Patient/f201", (obj.contained[0] as ProcedureRequest).subject.reference))
        assertTrue(stringMatch("Roel", (obj.contained[0] as ProcedureRequest).subject.display))
        assertTrue(stringMatch("Encounter/f203", (obj.contained[0] as ProcedureRequest).context!!.reference))
        assertTrue(stringMatch("Roel's encounter on March ele", (obj.contained[0] as ProcedureRequest).context!!.display))
        assertTrue(stringMatch("Practitioner/f201", (obj.contained[0] as ProcedureRequest).requester!!.agent.reference))
        assertTrue(stringMatch("Dokter Bronsig", (obj.contained[0] as ProcedureRequest).requester!!.agent.display))
        assertTrue(stringMatch("#req", obj.basedOn[0].reference))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://snomed.info/sct", obj.category!!.coding[0].system))
        assertTrue(stringMatch("15220000", obj.category!!.coding[0].code))
        assertTrue(stringMatch("Laboratory test", obj.category!!.coding[0].display))
    }

    @Test
    fun `diagnosticreport-example-f202-bloodculture 219 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-f202-bloodculture.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[1].system))
        assertTrue(stringMatch("LAB", obj.category!!.coding[1].code))
        assertTrue(stringMatch("http://snomed.info/sct", obj.code.coding[0].system))
        assertTrue(stringMatch("104177005", obj.code.coding[0].code))
        assertTrue(stringMatch("Blood culture for bacteria, i", obj.code.coding[0].display))
        assertTrue(stringMatch("Patient/f201", obj.subject!!.reference))
        assertTrue(stringMatch("Roel", obj.subject!!.display))
        assertEquals("2013-03-11T10:28:00+01:00", obj.issued.toString())
        assertTrue(stringMatch("Organization/f201", obj.performer[0].actor.reference))
        assertTrue(stringMatch("AUMC", obj.performer[0].actor.display))
        assertTrue(stringMatch("Observation/f206", obj.result[0].reference))
        assertTrue(stringMatch("Results for staphylococcus an", obj.result[0].display))
        assertTrue(stringMatch("Blood culture tested positive", obj.conclusion))
        assertTrue(stringMatch("http://snomed.info/sct", obj.codedDiagnosis[0].coding[0].system))
        assertTrue(stringMatch("428763004", obj.codedDiagnosis[0].coding[0].code))
        assertTrue(stringMatch("Bacteremia due to staphylococ", obj.codedDiagnosis[0].coding[0].display))
    }

    @Test
    fun `diagnosticreport-example-ghp 220 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("ghp", obj.id))
        assertEquals("2015-08-16T10:35:23Z", obj.meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("Specimen", (obj.contained[0] as Specimen).resourceType))
        assertTrue(stringMatch("rtt", (obj.contained[0] as Specimen).id))
        assertTrue(stringMatch("http://acme.com/labs/accessio", (obj.contained[0] as Specimen).accessionIdentifier!!.system))
        assertTrue(stringMatch("20150816-00124", (obj.contained[0] as Specimen).accessionIdentifier!!.value))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[0] as Specimen).type!!.coding[0].system))
        assertTrue(stringMatch("119364003", (obj.contained[0] as Specimen).type!!.coding[0].code))
        assertTrue(stringMatch("Serum sample", (obj.contained[0] as Specimen).type!!.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[0] as Specimen).subject.reference))
        assertTrue(stringMatch("Practitioner/f202", (obj.contained[0] as Specimen).collection!!.collector!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[0] as Specimen).collection!!.collectedDateTime.toString())
        assertTrue(stringMatch("http://acme.com/labs", (obj.contained[0] as Specimen).container[0].type!!.coding[0].system))
        assertTrue(stringMatch("SST", (obj.contained[0] as Specimen).container[0].type!!.coding[0].code))
        assertTrue(stringMatch("Serum Separator Tube", (obj.contained[0] as Specimen).container[0].type!!.coding[0].display))
        assertTrue(stringMatch("Specimen", (obj.contained[1] as Specimen).resourceType))
        assertTrue(stringMatch("ltt", (obj.contained[1] as Specimen).id))
        assertTrue(stringMatch("http://acme.com/labs/accessio", (obj.contained[1] as Specimen).accessionIdentifier!!.system))
        assertTrue(stringMatch("20150816-00124", (obj.contained[1] as Specimen).accessionIdentifier!!.value))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[1] as Specimen).type!!.coding[0].system))
        assertTrue(stringMatch("445295009", (obj.contained[1] as Specimen).type!!.coding[0].code))
        assertTrue(stringMatch("Blood specimen with EDTA", (obj.contained[1] as Specimen).type!!.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[1] as Specimen).subject.reference))
        assertTrue(stringMatch("Practitioner/f202", (obj.contained[1] as Specimen).collection!!.collector!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[1] as Specimen).collection!!.collectedDateTime.toString())
        assertTrue(stringMatch("http://acme.com/labs", (obj.contained[1] as Specimen).container[0].type!!.coding[0].system))
        assertTrue(stringMatch("LTT", (obj.contained[1] as Specimen).container[0].type!!.coding[0].code))
        assertTrue(stringMatch("Lavender Top Tube", (obj.contained[1] as Specimen).container[0].type!!.coding[0].display))
        assertTrue(stringMatch("Specimen", (obj.contained[2] as Specimen).resourceType))
        assertTrue(stringMatch("urine", (obj.contained[2] as Specimen).id))
        assertTrue(stringMatch("http://acme.com/labs/accessio", (obj.contained[2] as Specimen).accessionIdentifier!!.system))
        assertTrue(stringMatch("20150816-00124", (obj.contained[2] as Specimen).accessionIdentifier!!.value))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[2] as Specimen).type!!.coding[0].system))
        assertTrue(stringMatch("122575003", (obj.contained[2] as Specimen).type!!.coding[0].code))
        assertTrue(stringMatch("Urine specimen", (obj.contained[2] as Specimen).type!!.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[2] as Specimen).subject.reference))
        assertTrue(stringMatch("Practitioner/f202", (obj.contained[2] as Specimen).collection!!.collector!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[2] as Specimen).collection!!.collectedDateTime.toString())
        assertTrue(stringMatch("http://acme.com/labs", (obj.contained[2] as Specimen).container[0].type!!.coding[0].system))
        assertTrue(stringMatch("UCUP", (obj.contained[2] as Specimen).container[0].type!!.coding[0].code))
        assertTrue(stringMatch("100mL sterile cup", (obj.contained[2] as Specimen).container[0].type!!.coding[0].display))
        assertTrue(stringMatch("Observation", (obj.contained[3] as Observation).resourceType))
        assertTrue(stringMatch("p2", (obj.contained[3] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[3] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[3] as Observation).code.coding[0].system))
        assertTrue(stringMatch("58410-2", (obj.contained[3] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Complete blood count (hemogra", (obj.contained[3] as Observation).code.coding[0].display))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[3] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[3] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[3] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[3] as Observation).performer[0].display))
        assertTrue(stringMatch("#ltt", (obj.contained[3] as Observation).specimen!!.reference))
    }

    @Test
    fun `diagnosticreport-example-ghp 221 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Lavender Top Tube", (obj.contained[3] as Observation).specimen!!.display))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[0].type))
        assertTrue(stringMatch("#r1", (obj.contained[3] as Observation).related[0].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[1].type))
        assertTrue(stringMatch("#r2", (obj.contained[3] as Observation).related[1].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[2].type))
        assertTrue(stringMatch("#r3", (obj.contained[3] as Observation).related[2].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[3].type))
        assertTrue(stringMatch("#r4", (obj.contained[3] as Observation).related[3].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[4].type))
        assertTrue(stringMatch("#r5", (obj.contained[3] as Observation).related[4].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[5].type))
        assertTrue(stringMatch("#r6", (obj.contained[3] as Observation).related[5].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[6].type))
        assertTrue(stringMatch("#r7", (obj.contained[3] as Observation).related[6].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[7].type))
        assertTrue(stringMatch("#r8", (obj.contained[3] as Observation).related[7].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[8].type))
        assertTrue(stringMatch("#r9", (obj.contained[3] as Observation).related[8].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[9].type))
        assertTrue(stringMatch("#r10", (obj.contained[3] as Observation).related[9].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[10].type))
        assertTrue(stringMatch("#r11", (obj.contained[3] as Observation).related[10].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[11].type))
        assertTrue(stringMatch("#r12", (obj.contained[3] as Observation).related[11].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[12].type))
        assertTrue(stringMatch("#r13", (obj.contained[3] as Observation).related[12].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[13].type))
        assertTrue(stringMatch("#r14", (obj.contained[3] as Observation).related[13].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[14].type))
        assertTrue(stringMatch("#r15", (obj.contained[3] as Observation).related[14].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[15].type))
        assertTrue(stringMatch("#r16", (obj.contained[3] as Observation).related[15].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[3] as Observation).related[16].type))
        assertTrue(stringMatch("#r17", (obj.contained[3] as Observation).related[16].target.reference))
        assertTrue(stringMatch("Observation", (obj.contained[4] as Observation).resourceType))
        assertTrue(stringMatch("r1", (obj.contained[4] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[4] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[4] as Observation).code.coding[0].system))
        assertTrue(stringMatch("718-7", (obj.contained[4] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Hemoglobin [Mass/volume] in B", (obj.contained[4] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Haemoglobin", (obj.contained[4] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[4] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[4] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[4] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(176f), "%.2f".format((obj.contained[4] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[4] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[4] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("g/L", (obj.contained[4] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(135f), "%.2f".format((obj.contained[4] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[4] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[4] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("g/L", (obj.contained[4] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(180f), "%.2f".format((obj.contained[4] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[4] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[4] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("g/L", (obj.contained[4] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[5] as Observation).resourceType))
        assertTrue(stringMatch("r2", (obj.contained[5] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[5] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[5] as Observation).code.coding[0].system))
        assertTrue(stringMatch("789-8", (obj.contained[5] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocytes [#/volume] in Bl", (obj.contained[5] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Red Cell Count", (obj.contained[5] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[5] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[5] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[5] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(5.9f), "%.2f".format((obj.contained[5] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*12/L", (obj.contained[5] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[5] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*12/L", (obj.contained[5] as Observation).valueQuantity!!.code))
    }

    @Test
    fun `diagnosticreport-example-ghp 222 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("%.2f".format(4.2f), "%.2f".format((obj.contained[5] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*12/L", (obj.contained[5] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[5] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*12/L", (obj.contained[5] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(6.0f), "%.2f".format((obj.contained[5] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*12/L", (obj.contained[5] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[5] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*12/L", (obj.contained[5] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[6] as Observation).resourceType))
        assertTrue(stringMatch("r3", (obj.contained[6] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[6] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[6] as Observation).code.coding[0].system))
        assertTrue(stringMatch("4544-3", (obj.contained[6] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Hematocrit [Volume Fraction] ", (obj.contained[6] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Haematocrit", (obj.contained[6] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[6] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[6] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[6] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(55f), "%.2f".format((obj.contained[6] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[6] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[6] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[6] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(38f), "%.2f".format((obj.contained[6] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("%", (obj.contained[6] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(52f), "%.2f".format((obj.contained[6] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("%", (obj.contained[6] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[7] as Observation).resourceType))
        assertTrue(stringMatch("r4", (obj.contained[7] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[7] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[7] as Observation).code.coding[0].system))
        assertTrue(stringMatch("787-2", (obj.contained[7] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocyte mean corpuscular ", (obj.contained[7] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Mean Cell Volume", (obj.contained[7] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[7] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[7] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[7] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(99f), "%.2f".format((obj.contained[7] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("fL", (obj.contained[7] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[7] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("fL", (obj.contained[7] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[7] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[7] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(80f), "%.2f".format((obj.contained[7] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("fL", (obj.contained[7] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[7] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("fL", (obj.contained[7] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(98f), "%.2f".format((obj.contained[7] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("fL", (obj.contained[7] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[7] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("fL", (obj.contained[7] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[8] as Observation).resourceType))
        assertTrue(stringMatch("r5", (obj.contained[8] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[8] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[8] as Observation).code.coding[0].system))
        assertTrue(stringMatch("785-6", (obj.contained[8] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocyte mean corpuscular ", (obj.contained[8] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Mean Cell Haemoglobin", (obj.contained[8] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[8] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[8] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[8] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(36f), "%.2f".format((obj.contained[8] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("pg", (obj.contained[8] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[8] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("pg", (obj.contained[8] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[8] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[8] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(27f), "%.2f".format((obj.contained[8] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("pg", (obj.contained[8] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[8] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("pg", (obj.contained[8] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(35f), "%.2f".format((obj.contained[8] as Observation).referenceRange[0].high!!.value)))
    }

    @Test
    fun `diagnosticreport-example-ghp 223 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("pg", (obj.contained[8] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[8] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("pg", (obj.contained[8] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[9] as Observation).resourceType))
        assertTrue(stringMatch("r6", (obj.contained[9] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[9] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[9] as Observation).code.coding[0].system))
        assertTrue(stringMatch("777-3", (obj.contained[9] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Platelets [#/volume] in Blood", (obj.contained[9] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Platelet Count", (obj.contained[9] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[9] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[9] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[9] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(444f), "%.2f".format((obj.contained[9] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[9] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[9] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[9] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(150f), "%.2f".format((obj.contained[9] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[9] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[9] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[9] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(450f), "%.2f".format((obj.contained[9] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[9] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[9] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[9] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[10] as Observation).resourceType))
        assertTrue(stringMatch("r7", (obj.contained[10] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[10] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[10] as Observation).code.coding[0].system))
        assertTrue(stringMatch("6690-2", (obj.contained[10] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Leukocytes [#/volume] in Bloo", (obj.contained[10] as Observation).code.coding[0].display))
        assertTrue(stringMatch("White Cell Count", (obj.contained[10] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[10] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[10] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[10] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(4.6f), "%.2f".format((obj.contained[10] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[10] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[10] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[10] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(4.0f), "%.2f".format((obj.contained[10] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[10] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[10] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[10] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(11.0f), "%.2f".format((obj.contained[10] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[10] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[10] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[10] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[11] as Observation).resourceType))
        assertTrue(stringMatch("r8", (obj.contained[11] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[11] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[11] as Observation).code.coding[0].system))
        assertTrue(stringMatch("770-8", (obj.contained[11] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Neutrophils/100 leukocytes in", (obj.contained[11] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Neutrophils", (obj.contained[11] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[11] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[11] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[11] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[11] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[11] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[11] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[11] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[12] as Observation).resourceType))
        assertTrue(stringMatch("r9", (obj.contained[12] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[12] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[12] as Observation).code.coding[0].system))
        assertTrue(stringMatch("751-8", (obj.contained[12] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Neutrophils [#/volume] in Blo", (obj.contained[12] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Neutrophils", (obj.contained[12] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[12] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[12] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[12] as Observation).performer[0].display))
    }

    @Test
    fun `diagnosticreport-example-ghp 224 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("%.2f".format(0.9f), "%.2f".format((obj.contained[12] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[12] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[12] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[12] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[12] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("LL", (obj.contained[12] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(2.0f), "%.2f".format((obj.contained[12] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[12] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[12] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[12] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(7.5f), "%.2f".format((obj.contained[12] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[12] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[12] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[12] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[13] as Observation).resourceType))
        assertTrue(stringMatch("r10", (obj.contained[13] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[13] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[13] as Observation).code.coding[0].system))
        assertTrue(stringMatch("736-9", (obj.contained[13] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Lymphocytes/100 leukocytes in", (obj.contained[13] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Lymphocytes", (obj.contained[13] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[13] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[13] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[13] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[13] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[13] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[13] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[13] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[14] as Observation).resourceType))
        assertTrue(stringMatch("r11", (obj.contained[14] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[14] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[14] as Observation).code.coding[0].system))
        assertTrue(stringMatch("731-0", (obj.contained[14] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Lymphocytes [#/volume] in Blo", (obj.contained[14] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Lymphocytes", (obj.contained[14] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[14] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[14] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[14] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.9f), "%.2f".format((obj.contained[14] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[14] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[14] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[14] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[14] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("L", (obj.contained[14] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(1.1f), "%.2f".format((obj.contained[14] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[14] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[14] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[14] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(4.0f), "%.2f".format((obj.contained[14] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[14] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[14] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[14] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[15] as Observation).resourceType))
        assertTrue(stringMatch("r12", (obj.contained[15] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[15] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[15] as Observation).code.coding[0].system))
        assertTrue(stringMatch("5905-5", (obj.contained[15] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Monocytes/100 leukocytes in B", (obj.contained[15] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Monocytes", (obj.contained[15] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[15] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[15] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[15] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[15] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[15] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[15] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[15] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[16] as Observation).resourceType))
        assertTrue(stringMatch("r13", (obj.contained[16] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[16] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[16] as Observation).code.coding[0].system))
        assertTrue(stringMatch("742-7", (obj.contained[16] as Observation).code.coding[0].code))
    }

    @Test
    fun `diagnosticreport-example-ghp 225 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Monocytes [#/volume] in Blood", (obj.contained[16] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Monocytes", (obj.contained[16] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[16] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[16] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[16] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.9f), "%.2f".format((obj.contained[16] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[16] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[16] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[16] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(0.2f), "%.2f".format((obj.contained[16] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[16] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[16] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[16] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(1.0f), "%.2f".format((obj.contained[16] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[16] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[16] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[16] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[17] as Observation).resourceType))
        assertTrue(stringMatch("r14", (obj.contained[17] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[17] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[17] as Observation).code.coding[0].system))
        assertTrue(stringMatch("713-8", (obj.contained[17] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Eosinophils/100 leukocytes in", (obj.contained[17] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Eosinophils", (obj.contained[17] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[17] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[17] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[17] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[17] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[17] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[17] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[17] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[18] as Observation).resourceType))
        assertTrue(stringMatch("r15", (obj.contained[18] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[18] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[18] as Observation).code.coding[0].system))
        assertTrue(stringMatch("711-2", (obj.contained[18] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Eosinophils [#/volume] in Blo", (obj.contained[18] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Eosinophils", (obj.contained[18] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[18] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[18] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[18] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.92f), "%.2f".format((obj.contained[18] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[18] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[18] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[18] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[18] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("HH", (obj.contained[18] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(0.04f), "%.2f".format((obj.contained[18] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[18] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[18] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[18] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(0.40f), "%.2f".format((obj.contained[18] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[18] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[18] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[18] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[19] as Observation).resourceType))
        assertTrue(stringMatch("r16", (obj.contained[19] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[19] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[19] as Observation).code.coding[0].system))
        assertTrue(stringMatch("706-2", (obj.contained[19] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Basophils/100 leukocytes in B", (obj.contained[19] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Basophils", (obj.contained[19] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[19] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[19] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[19] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[19] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[19] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[19] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[19] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[20] as Observation).resourceType))
        assertTrue(stringMatch("r17", (obj.contained[20] as Observation).id))
    }

    @Test
    fun `diagnosticreport-example-ghp 226 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("final", (obj.contained[20] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[20] as Observation).code.coding[0].system))
        assertTrue(stringMatch("704-7", (obj.contained[20] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Basophils [#/volume] in Blood", (obj.contained[20] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Basophils", (obj.contained[20] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[20] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[20] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[20] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.92f), "%.2f".format((obj.contained[20] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[20] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[20] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[20] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(0.21f), "%.2f".format((obj.contained[20] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[20] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[20] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[20] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[21] as Observation).resourceType))
        assertTrue(stringMatch("p1", (obj.contained[21] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[21] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[21] as Observation).code.coding[0].system))
        assertTrue(stringMatch("24323-8", (obj.contained[21] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Comprehensive metabolic 2000 ", (obj.contained[21] as Observation).code.coding[0].display))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[21] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[21] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[21] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[21] as Observation).performer[0].display))
        assertTrue(stringMatch("#rtt", (obj.contained[21] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Red Top Tube", (obj.contained[21] as Observation).specimen!!.display))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[0].type))
        assertTrue(stringMatch("#o1", (obj.contained[21] as Observation).related[0].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[1].type))
        assertTrue(stringMatch("#o2", (obj.contained[21] as Observation).related[1].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[2].type))
        assertTrue(stringMatch("#o3", (obj.contained[21] as Observation).related[2].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[3].type))
        assertTrue(stringMatch("#o4", (obj.contained[21] as Observation).related[3].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[4].type))
        assertTrue(stringMatch("#o5", (obj.contained[21] as Observation).related[4].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[5].type))
        assertTrue(stringMatch("#o6", (obj.contained[21] as Observation).related[5].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[6].type))
        assertTrue(stringMatch("#o7", (obj.contained[21] as Observation).related[6].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[7].type))
        assertTrue(stringMatch("#o8", (obj.contained[21] as Observation).related[7].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[8].type))
        assertTrue(stringMatch("#o9", (obj.contained[21] as Observation).related[8].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[9].type))
        assertTrue(stringMatch("#o10", (obj.contained[21] as Observation).related[9].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[10].type))
        assertTrue(stringMatch("#o11", (obj.contained[21] as Observation).related[10].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[11].type))
        assertTrue(stringMatch("#o12", (obj.contained[21] as Observation).related[11].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[12].type))
        assertTrue(stringMatch("#o13", (obj.contained[21] as Observation).related[12].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[13].type))
        assertTrue(stringMatch("#o14", (obj.contained[21] as Observation).related[13].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[14].type))
        assertTrue(stringMatch("#o15", (obj.contained[21] as Observation).related[14].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[15].type))
        assertTrue(stringMatch("#o16", (obj.contained[21] as Observation).related[15].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[16].type))
        assertTrue(stringMatch("#o17", (obj.contained[21] as Observation).related[16].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[17].type))
        assertTrue(stringMatch("#o18", (obj.contained[21] as Observation).related[17].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[18].type))
        assertTrue(stringMatch("#o19", (obj.contained[21] as Observation).related[18].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[19].type))
        assertTrue(stringMatch("#o20", (obj.contained[21] as Observation).related[19].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[20].type))
        assertTrue(stringMatch("#o21", (obj.contained[21] as Observation).related[20].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[21] as Observation).related[21].type))
    }

    @Test
    fun `diagnosticreport-example-ghp 227 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("#o22", (obj.contained[21] as Observation).related[21].target.reference))
        assertTrue(stringMatch("Observation", (obj.contained[22] as Observation).resourceType))
        assertTrue(stringMatch("o1", (obj.contained[22] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[22] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[22] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2951-2", (obj.contained[22] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Sodium [Moles/volume] in Seru", (obj.contained[22] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[22] as Observation).code.coding[1].system))
        assertTrue(stringMatch("104934005", (obj.contained[22] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[22] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[22] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[22] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(140f), "%.2f".format((obj.contained[22] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[22] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(137f), "%.2f".format((obj.contained[22] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[22] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(147f), "%.2f".format((obj.contained[22] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[22] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[23] as Observation).resourceType))
        assertTrue(stringMatch("o2", (obj.contained[23] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[23] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[23] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2823-3", (obj.contained[23] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Potassium [Moles/volume] in S", (obj.contained[23] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[23] as Observation).code.coding[1].system))
        assertTrue(stringMatch("59573005", (obj.contained[23] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[23] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[23] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[23] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(4.2f), "%.2f".format((obj.contained[23] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[23] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(3.5f), "%.2f".format((obj.contained[23] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[23] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(5.0f), "%.2f".format((obj.contained[23] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[23] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[24] as Observation).resourceType))
        assertTrue(stringMatch("o3", (obj.contained[24] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[24] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[24] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2075-0", (obj.contained[24] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Chloride [Moles/volume] in Se", (obj.contained[24] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[24] as Observation).code.coding[1].system))
        assertTrue(stringMatch("46511006", (obj.contained[24] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[24] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[24] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[24] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(105f), "%.2f".format((obj.contained[24] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[24] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(96f), "%.2f".format((obj.contained[24] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[24] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(109f), "%.2f".format((obj.contained[24] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[24] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[25] as Observation).resourceType))
        assertTrue(stringMatch("o4", (obj.contained[25] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[25] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[25] as Observation).code.coding[0].system))
        assertTrue(stringMatch("1963-8", (obj.contained[25] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Bicarbonate [Moles/volume] in", (obj.contained[25] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[25] as Observation).code.coding[1].system))
        assertTrue(stringMatch("88645003", (obj.contained[25] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[25] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[25] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[25] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(26f), "%.2f".format((obj.contained[25] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[25] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(25f), "%.2f".format((obj.contained[25] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[25] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(33f), "%.2f".format((obj.contained[25] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[25] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[26] as Observation).resourceType))
        assertTrue(stringMatch("o5", (obj.contained[26] as Observation).id))
    }

    @Test
    fun `diagnosticreport-example-ghp 228 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("final", (obj.contained[26] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[26] as Observation).code.coding[0].system))
        assertTrue(stringMatch("1863-0", (obj.contained[26] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Anion gap 4 in Serum or Plasm", (obj.contained[26] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[26] as Observation).code.coding[1].system))
        assertTrue(stringMatch("271057005", (obj.contained[26] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[26] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[26] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[26] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(13f), "%.2f".format((obj.contained[26] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[26] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(4f), "%.2f".format((obj.contained[26] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[26] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(17f), "%.2f".format((obj.contained[26] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[26] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[27] as Observation).resourceType))
        assertTrue(stringMatch("o6", (obj.contained[27] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[27] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[27] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14749-6", (obj.contained[27] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Glucose [Moles/volume] in Ser", (obj.contained[27] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[27] as Observation).code.coding[1].system))
        assertTrue(stringMatch("36048009", (obj.contained[27] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[27] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[27] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[27] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(7.4f), "%.2f".format((obj.contained[27] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[27] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(3.0f), "%.2f".format((obj.contained[27] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[27] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(7.7f), "%.2f".format((obj.contained[27] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[27] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[28] as Observation).resourceType))
        assertTrue(stringMatch("o7", (obj.contained[28] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[28] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[28] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14937-7", (obj.contained[28] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Urea nitrogen [Moles/volume] ", (obj.contained[28] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[28] as Observation).code.coding[1].system))
        assertTrue(stringMatch("273967009", (obj.contained[28] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[28] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[28] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[28] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(4.7f), "%.2f".format((obj.contained[28] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[28] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(2.0f), "%.2f".format((obj.contained[28] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[28] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(7.0f), "%.2f".format((obj.contained[28] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[28] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[29] as Observation).resourceType))
        assertTrue(stringMatch("o8", (obj.contained[29] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[29] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[29] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14682-9", (obj.contained[29] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Creatinine [Moles/volume] in ", (obj.contained[29] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[29] as Observation).code.coding[1].system))
        assertTrue(stringMatch("70901006", (obj.contained[29] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[29] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[29] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[29] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.09f), "%.2f".format((obj.contained[29] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[29] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(0.04f), "%.2f".format((obj.contained[29] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[29] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(0.11f), "%.2f".format((obj.contained[29] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[29] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[30] as Observation).resourceType))
        assertTrue(stringMatch("o9", (obj.contained[30] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[30] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[30] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14933-6", (obj.contained[30] as Observation).code.coding[0].code))
    }

    @Test
    fun `diagnosticreport-example-ghp 229 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Urate [Moles/volume] in Serum", (obj.contained[30] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[30] as Observation).code.coding[1].system))
        assertTrue(stringMatch("86228006", (obj.contained[30] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[30] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[30] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[30] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.39f), "%.2f".format((obj.contained[30] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[30] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[30] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[30] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(0.14f), "%.2f".format((obj.contained[30] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[30] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(0.35f), "%.2f".format((obj.contained[30] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[30] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[31] as Observation).resourceType))
        assertTrue(stringMatch("o10", (obj.contained[31] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[31] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[31] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14631-6", (obj.contained[31] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Bilirubin.total [Moles/volume", (obj.contained[31] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[31] as Observation).code.coding[1].system))
        assertTrue(stringMatch("27171005", (obj.contained[31] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[31] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[31] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[31] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(7f), "%.2f".format((obj.contained[31] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("umol/L", (obj.contained[31] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(2f), "%.2f".format((obj.contained[31] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("umol/L", (obj.contained[31] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[31] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("umol/L", (obj.contained[31] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[32] as Observation).resourceType))
        assertTrue(stringMatch("o11", (obj.contained[32] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[32] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[32] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14629-0", (obj.contained[32] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Bilirubin.direct [Moles/volum", (obj.contained[32] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[32] as Observation).code.coding[1].system))
        assertTrue(stringMatch("39748002", (obj.contained[32] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[32] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[32] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[32] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(3f), "%.2f".format((obj.contained[32] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("umol/L", (obj.contained[32] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(0f), "%.2f".format((obj.contained[32] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("umol/L", (obj.contained[32] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(8f), "%.2f".format((obj.contained[32] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("umol/L", (obj.contained[32] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[33] as Observation).resourceType))
        assertTrue(stringMatch("o12", (obj.contained[33] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[33] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[33] as Observation).code.coding[0].system))
        assertTrue(stringMatch("6768-6", (obj.contained[33] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Alkaline phosphatase [Enzymat", (obj.contained[33] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[33] as Observation).code.coding[1].system))
        assertTrue(stringMatch("88810008", (obj.contained[33] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[33] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[33] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[33] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(108f), "%.2f".format((obj.contained[33] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[33] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(30f), "%.2f".format((obj.contained[33] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[33] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(115f), "%.2f".format((obj.contained[33] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[33] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[34] as Observation).resourceType))
        assertTrue(stringMatch("o13", (obj.contained[34] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[34] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[34] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2324-2", (obj.contained[34] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Gamma glutamyl transferase [E", (obj.contained[34] as Observation).code.coding[0].display))
    }

    @Test
    fun `diagnosticreport-example-ghp 230 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[34] as Observation).code.coding[1].system))
        assertTrue(stringMatch("69480007", (obj.contained[34] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[34] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[34] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[34] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(35f), "%.2f".format((obj.contained[34] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[34] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(0f), "%.2f".format((obj.contained[34] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[34] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(45f), "%.2f".format((obj.contained[34] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[34] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[35] as Observation).resourceType))
        assertTrue(stringMatch("o14", (obj.contained[35] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[35] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[35] as Observation).code.coding[0].system))
        assertTrue(stringMatch("1742-6", (obj.contained[35] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Alanine aminotransferase [Enz", (obj.contained[35] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[35] as Observation).code.coding[1].system))
        assertTrue(stringMatch("34608000", (obj.contained[35] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[35] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[35] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[35] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(54f), "%.2f".format((obj.contained[35] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[35] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[35] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[35] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(0f), "%.2f".format((obj.contained[35] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[35] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(45f), "%.2f".format((obj.contained[35] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[35] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[36] as Observation).resourceType))
        assertTrue(stringMatch("o15", (obj.contained[36] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[36] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[36] as Observation).code.coding[0].system))
        assertTrue(stringMatch("1920-8", (obj.contained[36] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Aspartate aminotransferase [E", (obj.contained[36] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[36] as Observation).code.coding[1].system))
        assertTrue(stringMatch("45896001", (obj.contained[36] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[36] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[36] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[36] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(30f), "%.2f".format((obj.contained[36] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[36] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(0f), "%.2f".format((obj.contained[36] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[36] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(41f), "%.2f".format((obj.contained[36] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[36] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[37] as Observation).resourceType))
        assertTrue(stringMatch("o16", (obj.contained[37] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[37] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[37] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2532-0", (obj.contained[37] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Lactate dehydrogenase [Enzyma", (obj.contained[37] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[37] as Observation).code.coding[1].system))
        assertTrue(stringMatch("11274001", (obj.contained[37] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[37] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[37] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[37] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(131f), "%.2f".format((obj.contained[37] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[37] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(80f), "%.2f".format((obj.contained[37] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[37] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(250f), "%.2f".format((obj.contained[37] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("U/L", (obj.contained[37] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[38] as Observation).resourceType))
        assertTrue(stringMatch("o17", (obj.contained[38] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[38] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[38] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2000-8", (obj.contained[38] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Calcium [Moles/volume] in Ser", (obj.contained[38] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[38] as Observation).code.coding[1].system))
    }

    @Test
    fun `diagnosticreport-example-ghp 231 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("71878006", (obj.contained[38] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[38] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[38] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[38] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(2.38f), "%.2f".format((obj.contained[38] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[38] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(2.25f), "%.2f".format((obj.contained[38] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[38] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(2.65f), "%.2f".format((obj.contained[38] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[38] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[39] as Observation).resourceType))
        assertTrue(stringMatch("o18", (obj.contained[39] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[39] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[39] as Observation).code.coding[0].system))
        assertTrue(stringMatch("13959-2", (obj.contained[39] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Calcium.ionized [Moles/volume", (obj.contained[39] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[39] as Observation).code.coding[1].system))
        assertTrue(stringMatch("166708003", (obj.contained[39] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[39] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[39] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[39] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(2.39f), "%.2f".format((obj.contained[39] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[39] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(2.25f), "%.2f".format((obj.contained[39] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[39] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(2.65f), "%.2f".format((obj.contained[39] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[39] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[40] as Observation).resourceType))
        assertTrue(stringMatch("o19", (obj.contained[40] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[40] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[40] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14879-1", (obj.contained[40] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Phosphate [Moles/volume] in S", (obj.contained[40] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[40] as Observation).code.coding[1].system))
        assertTrue(stringMatch("104866001", (obj.contained[40] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[40] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[40] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[40] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1.5f), "%.2f".format((obj.contained[40] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[40] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(0.8f), "%.2f".format((obj.contained[40] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[40] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(1.5f), "%.2f".format((obj.contained[40] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[40] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[41] as Observation).resourceType))
        assertTrue(stringMatch("o20", (obj.contained[41] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[41] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[41] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2885-2", (obj.contained[41] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Protein [Mass/volume] in Seru", (obj.contained[41] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[41] as Observation).code.coding[1].system))
        assertTrue(stringMatch("74040009", (obj.contained[41] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[41] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[41] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[41] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(67f), "%.2f".format((obj.contained[41] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[41] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(60f), "%.2f".format((obj.contained[41] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[41] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(82f), "%.2f".format((obj.contained[41] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[41] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[42] as Observation).resourceType))
        assertTrue(stringMatch("o21", (obj.contained[42] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[42] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[42] as Observation).code.coding[0].system))
        assertTrue(stringMatch("1751-7", (obj.contained[42] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Albumin [Mass/volume] in Seru", (obj.contained[42] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[42] as Observation).code.coding[1].system))
        assertTrue(stringMatch("104485008", (obj.contained[42] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[42] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[42] as Observation).performer[0].reference))
    }

    @Test
    fun `diagnosticreport-example-ghp 232 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[42] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(42f), "%.2f".format((obj.contained[42] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[42] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(35f), "%.2f".format((obj.contained[42] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[42] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(50f), "%.2f".format((obj.contained[42] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[42] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[43] as Observation).resourceType))
        assertTrue(stringMatch("o22", (obj.contained[43] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[43] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[43] as Observation).code.coding[0].system))
        assertTrue(stringMatch("10834-0", (obj.contained[43] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Globulin [Mass/volume] in Ser", (obj.contained[43] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[43] as Observation).code.coding[1].system))
        assertTrue(stringMatch("104979009", (obj.contained[43] as Observation).code.coding[1].code))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[43] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[43] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[43] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(25f), "%.2f".format((obj.contained[43] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[43] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[43] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[43] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(40f), "%.2f".format((obj.contained[43] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[43] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[44] as Observation).resourceType))
        assertTrue(stringMatch("p3", (obj.contained[44] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[44] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[44] as Observation).code.coding[0].system))
        assertTrue(stringMatch("24357-6", (obj.contained[44] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Urinalysis macro (dipstick) p", (obj.contained[44] as Observation).code.coding[0].display))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[44] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[44] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[44] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[44] as Observation).performer[0].display))
        assertTrue(stringMatch("#urine", (obj.contained[44] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[44] as Observation).specimen!!.display))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[0].type))
        assertTrue(stringMatch("#u1", (obj.contained[44] as Observation).related[0].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[1].type))
        assertTrue(stringMatch("#u2", (obj.contained[44] as Observation).related[1].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[2].type))
        assertTrue(stringMatch("#u3", (obj.contained[44] as Observation).related[2].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[3].type))
        assertTrue(stringMatch("#u4", (obj.contained[44] as Observation).related[3].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[4].type))
        assertTrue(stringMatch("#u5", (obj.contained[44] as Observation).related[4].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[5].type))
        assertTrue(stringMatch("#u6", (obj.contained[44] as Observation).related[5].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[6].type))
        assertTrue(stringMatch("#u7", (obj.contained[44] as Observation).related[6].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[7].type))
        assertTrue(stringMatch("#u8", (obj.contained[44] as Observation).related[7].target.reference))
        assertTrue(stringMatch("has-member", (obj.contained[44] as Observation).related[8].type))
        assertTrue(stringMatch("#u9", (obj.contained[44] as Observation).related[8].target.reference))
        assertTrue(stringMatch("Observation", (obj.contained[45] as Observation).resourceType))
        assertTrue(stringMatch("u1", (obj.contained[45] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[45] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[45] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2756-5", (obj.contained[45] as Observation).code.coding[0].code))
        assertTrue(stringMatch("pH of Urine", (obj.contained[45] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[45] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[45] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[45] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[45] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[45] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(5.0f), "%.2f".format((obj.contained[45] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("pH", (obj.contained[45] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("#urine", (obj.contained[45] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[45] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[46] as Observation).resourceType))
        assertTrue(stringMatch("u2", (obj.contained[46] as Observation).id))
    }

    @Test
    fun `diagnosticreport-example-ghp 233 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("final", (obj.contained[46] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[46] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2887-8", (obj.contained[46] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Protein [Presence] in Urine", (obj.contained[46] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[46] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[46] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[46] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[46] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[46] as Observation).performer[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[46] as Observation).valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("260385009", (obj.contained[46] as Observation).valueCodeableConcept!!.coding[0].code))
        assertTrue(stringMatch("Negative", (obj.contained[46] as Observation).valueCodeableConcept!!.coding[0].display))
        assertTrue(stringMatch("#urine", (obj.contained[46] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[46] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[47] as Observation).resourceType))
        assertTrue(stringMatch("u3", (obj.contained[47] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[47] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[47] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2965-2", (obj.contained[47] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Specific gravity of Urine", (obj.contained[47] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[47] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[47] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[47] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[47] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[47] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1.009f), "%.2f".format((obj.contained[47] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("#urine", (obj.contained[47] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[47] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[48] as Observation).resourceType))
        assertTrue(stringMatch("u4", (obj.contained[48] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[48] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[48] as Observation).code.coding[0].system))
        assertTrue(stringMatch("33051-4", (obj.contained[48] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocytes [Presence] in Ur", (obj.contained[48] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[48] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[48] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[48] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[48] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[48] as Observation).performer[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[48] as Observation).valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("260385009", (obj.contained[48] as Observation).valueCodeableConcept!!.coding[0].code))
        assertTrue(stringMatch("Negative", (obj.contained[48] as Observation).valueCodeableConcept!!.coding[0].display))
        assertTrue(stringMatch("#urine", (obj.contained[48] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[48] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[49] as Observation).resourceType))
        assertTrue(stringMatch("u5", (obj.contained[49] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[49] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[49] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2349-9", (obj.contained[49] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Glucose [Presence] in Urine", (obj.contained[49] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[49] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[49] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[49] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[49] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[49] as Observation).performer[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[49] as Observation).valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("260385009", (obj.contained[49] as Observation).valueCodeableConcept!!.coding[0].code))
        assertTrue(stringMatch("Negative", (obj.contained[49] as Observation).valueCodeableConcept!!.coding[0].display))
        assertTrue(stringMatch("#urine", (obj.contained[49] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[49] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[50] as Observation).resourceType))
        assertTrue(stringMatch("u6", (obj.contained[50] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[50] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[50] as Observation).code.coding[0].system))
        assertTrue(stringMatch("33052-2", (obj.contained[50] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Leukocytes [Presence] in Urin", (obj.contained[50] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[50] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[50] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[50] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[50] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[50] as Observation).performer[0].display))
    }

    @Test
    fun `diagnosticreport-example-ghp 234 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[50] as Observation).valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("260385009", (obj.contained[50] as Observation).valueCodeableConcept!!.coding[0].code))
        assertTrue(stringMatch("Negative", (obj.contained[50] as Observation).valueCodeableConcept!!.coding[0].display))
        assertTrue(stringMatch("#urine", (obj.contained[50] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[50] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[51] as Observation).resourceType))
        assertTrue(stringMatch("u7", (obj.contained[51] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[51] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[51] as Observation).code.coding[0].system))
        assertTrue(stringMatch("30405-5", (obj.contained[51] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Leukocytes [#/volume] in Urin", (obj.contained[51] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[51] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[51] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[51] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[51] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[51] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1f), "%.2f".format((obj.contained[51] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("/uL", (obj.contained[51] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("#urine", (obj.contained[51] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[51] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[52] as Observation).resourceType))
        assertTrue(stringMatch("u8", (obj.contained[52] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[52] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[52] as Observation).code.coding[0].system))
        assertTrue(stringMatch("30391-7", (obj.contained[52] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythocytes [#/volume] in Uri", (obj.contained[52] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[52] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[52] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[52] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[52] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[52] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1f), "%.2f".format((obj.contained[52] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("<", (obj.contained[52] as Observation).valueQuantity!!.comparator))
        assertTrue(stringMatch("/uL", (obj.contained[52] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("#urine", (obj.contained[52] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[52] as Observation).specimen!!.display))
        assertTrue(stringMatch("Observation", (obj.contained[53] as Observation).resourceType))
        assertTrue(stringMatch("u9", (obj.contained[53] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[53] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[53] as Observation).code.coding[0].system))
        assertTrue(stringMatch("13654-9", (obj.contained[53] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Epithelial cells.squamous [#/", (obj.contained[53] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[53] as Observation).subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", (obj.contained[53] as Observation).effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", (obj.contained[53] as Observation).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[53] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[53] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1f), "%.2f".format((obj.contained[53] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("<", (obj.contained[53] as Observation).valueQuantity!!.comparator))
        assertTrue(stringMatch("/mL", (obj.contained[53] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("#urine", (obj.contained[53] as Observation).specimen!!.reference))
        assertTrue(stringMatch("Urine Sample", (obj.contained[53] as Observation).specimen!!.display))
        assertTrue(stringMatch("http://acme.com/lab/reports", obj.identifier[0].system))
        assertTrue(stringMatch("ghp-example", obj.identifier[0].value))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://acme.com/labs/reports", obj.code.coding[0].system))
        assertTrue(stringMatch("GHP", obj.code.coding[0].code))
        assertTrue(stringMatch("General Health Profile", obj.code.coding[0].display))
        assertTrue(stringMatch("Patient/pat2", obj.subject!!.reference))
        assertEquals("2015-08-16T06:40:17Z", obj.effectiveDateTime.toString())
        assertEquals("2015-08-17T06:40:17Z", obj.issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", obj.performer[0].actor.display))
        assertTrue(stringMatch("#rtt", obj.specimen[0].reference))
        assertTrue(stringMatch("Red Top Tube", obj.specimen[0].display))
        assertTrue(stringMatch("#ltt", obj.specimen[1].reference))
        assertTrue(stringMatch("Lavender Top Tube", obj.specimen[1].display))
        assertTrue(stringMatch("#urine", obj.specimen[2].reference))
        assertTrue(stringMatch("Urine Sample", obj.specimen[2].display))
        assertTrue(stringMatch("#p1", obj.result[0].reference))
        assertTrue(stringMatch("Chemistry Panel", obj.result[0].display))
    }

    @Test
    fun `diagnosticreport-example-ghp 235 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ghp.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("#p2", obj.result[1].reference))
        assertTrue(stringMatch("CBC", obj.result[1].display))
        assertTrue(stringMatch("#p3", obj.result[2].reference))
        assertTrue(stringMatch("Urinalysis", obj.result[2].display))
    }

    @Test
    fun `diagnosticreport-example-lipids 236 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-lipids.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("lipids", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("Observation", (obj.contained[0] as Observation).resourceType))
        assertTrue(stringMatch("cholesterol", (obj.contained[0] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[0] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[0] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14647-2", (obj.contained[0] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Cholesterol [Moles/​volume] i", (obj.contained[0] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Cholesterol", (obj.contained[0] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[0] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[0] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[0] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(6.3f), "%.2f".format((obj.contained[0] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[0] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[0] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[0] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(4.5f), "%.2f".format((obj.contained[0] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[0] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[0] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[0] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[1] as Observation).resourceType))
        assertTrue(stringMatch("triglyceride", (obj.contained[1] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[1] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[1] as Observation).code.coding[0].system))
        assertTrue(stringMatch("14927-8", (obj.contained[1] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Triglyceride [Moles/​volume] ", (obj.contained[1] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Triglyceride", (obj.contained[1] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[1] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[1] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[1] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1.3f), "%.2f".format((obj.contained[1] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[1] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[1] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[1] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(2.0f), "%.2f".format((obj.contained[1] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[1] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[1] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[1] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[2] as Observation).resourceType))
        assertTrue(stringMatch("hdlcholesterol", (obj.contained[2] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[2] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[2] as Observation).code.coding[0].system))
        assertTrue(stringMatch("2085-9", (obj.contained[2] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Cholesterol in HDL [Moles/​vo", (obj.contained[2] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Cholesterol in HDL", (obj.contained[2] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[2] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[2] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[2] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(1.3f), "%.2f".format((obj.contained[2] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[2] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[2] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[2] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(1.5f), "%.2f".format((obj.contained[2] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[2] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[2] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[2] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[3] as Observation).resourceType))
        assertTrue(stringMatch("ldlcholesterol", (obj.contained[3] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[3] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[3] as Observation).code.coding[0].system))
        assertTrue(stringMatch("39469-2", (obj.contained[3] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Cholesterol in LDL [Moles/​vo", (obj.contained[3] as Observation).code.coding[0].display))
        assertTrue(stringMatch("LDL Chol. (Calc)", (obj.contained[3] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[3] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[3] as Observation).performer[0].reference))
    }

    @Test
    fun `diagnosticreport-example-lipids 237 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-lipids.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[3] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(4.6f), "%.2f".format((obj.contained[3] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[3] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[3] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[3] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(3.0f), "%.2f".format((obj.contained[3] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("mmol/L", (obj.contained[3] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[3] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("mmol/L", (obj.contained[3] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("http://acme.com/lab/reports", obj.identifier[0].system))
        assertTrue(stringMatch("5234342", obj.identifier[0].value))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[0].system))
        assertTrue(stringMatch("HM", obj.category!!.coding[0].code))
        assertTrue(stringMatch("http://loinc.org", obj.code.coding[0].system))
        assertTrue(stringMatch("24331-1", obj.code.coding[0].code))
        assertTrue(stringMatch("Lipid 1996 panel - Serum or P", obj.code.coding[0].display))
        assertTrue(stringMatch("Lipid Panel", obj.code.text))
        assertTrue(stringMatch("Patient/pat2", obj.subject!!.reference))
        assertEquals("2011-03-04T08:30:00+11:00", obj.effectiveDateTime.toString())
        assertEquals("2013-01-27T11:45:33+11:00", obj.issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", obj.performer[0].actor.display))
        assertTrue(stringMatch("#cholesterol", obj.result[0].reference))
        assertTrue(stringMatch("#triglyceride", obj.result[1].reference))
        assertTrue(stringMatch("#hdlcholesterol", obj.result[2].reference))
        assertTrue(stringMatch("#ldlcholesterol", obj.result[3].reference))
    }

    @Test
    fun `diagnosticreport-example-f001-bloodexam 238 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-f001-bloodexam.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("f001", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("ProcedureRequest", (obj.contained[0] as ProcedureRequest).resourceType))
        assertTrue(stringMatch("req", (obj.contained[0] as ProcedureRequest).id))
        assertTrue(stringMatch("http://example.org/bodysiteco", (obj.contained[0] as ProcedureRequest).extension[0].url))
        assertTrue(stringMatch("http://snomed.info/sct", (obj.contained[0] as ProcedureRequest).extension[0].valueCodeableConcept!!.coding[0].system))
        assertTrue(stringMatch("14975008", (obj.contained[0] as ProcedureRequest).extension[0].valueCodeableConcept!!.coding[0].code))
        assertTrue(stringMatch("Forearm structure", (obj.contained[0] as ProcedureRequest).extension[0].valueCodeableConcept!!.coding[0].display))
        assertTrue(stringMatch("http://www.bmc.nl/zorgportal/", (obj.contained[0] as ProcedureRequest).identifier[0].system))
        assertTrue(stringMatch("L2381", (obj.contained[0] as ProcedureRequest).identifier[0].value))
        assertTrue(stringMatch("active", (obj.contained[0] as ProcedureRequest).status))
        assertTrue(stringMatch("original-order", (obj.contained[0] as ProcedureRequest).intent))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[0] as ProcedureRequest).code.coding[0].system))
        assertTrue(stringMatch("58410-2", (obj.contained[0] as ProcedureRequest).code.coding[0].code))
        assertTrue(stringMatch("Complete blood count (hemogra", (obj.contained[0] as ProcedureRequest).code.coding[0].display))
        assertTrue(stringMatch("Patient/f001", (obj.contained[0] as ProcedureRequest).subject.reference))
        assertTrue(stringMatch("P. van den Heuvel", (obj.contained[0] as ProcedureRequest).subject.display))
        assertTrue(stringMatch("Encounter/f001", (obj.contained[0] as ProcedureRequest).context!!.reference))
        assertTrue(stringMatch("Practitioner/f001", (obj.contained[0] as ProcedureRequest).requester!!.agent.reference))
        assertTrue(stringMatch("E.van den Broek", (obj.contained[0] as ProcedureRequest).requester!!.agent.display))
        assertTrue(stringMatch("patient almost fainted during", (obj.contained[0] as ProcedureRequest).note[0].text))
        assertTrue(stringMatch("official", obj.identifier[0].use))
        assertTrue(stringMatch("http://www.bmc.nl/zorgportal/", obj.identifier[0].system))
        assertTrue(stringMatch("nr1239044", obj.identifier[0].value))
        assertTrue(stringMatch("#req", obj.basedOn[0].reference))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://snomed.info/sct", obj.category!!.coding[0].system))
        assertTrue(stringMatch("252275004", obj.category!!.coding[0].code))
        assertTrue(stringMatch("Haematology test", obj.category!!.coding[0].display))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[1].system))
        assertTrue(stringMatch("HM", obj.category!!.coding[1].code))
        assertTrue(stringMatch("http://loinc.org", obj.code.coding[0].system))
        assertTrue(stringMatch("58410-2", obj.code.coding[0].code))
        assertTrue(stringMatch("Complete blood count (hemogra", obj.code.coding[0].display))
        assertTrue(stringMatch("Patient/f001", obj.subject!!.reference))
        assertTrue(stringMatch("P. van den Heuvel", obj.subject!!.display))
        assertEquals("2013-05-15T19:32:52+01:00", obj.issued.toString())
        assertTrue(stringMatch("Organization/f001", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Burgers University Medical Ce", obj.performer[0].actor.display))
        assertTrue(stringMatch("Observation/f001", obj.result[0].reference))
        assertTrue(stringMatch("Observation/f002", obj.result[1].reference))
        assertTrue(stringMatch("Observation/f003", obj.result[2].reference))
    }

    @Test
    fun `diagnosticreport-example-f001-bloodexam 239 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-f001-bloodexam.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Observation/f004", obj.result[3].reference))
        assertTrue(stringMatch("Observation/f005", obj.result[4].reference))
        assertTrue(stringMatch("Core lab", obj.conclusion))
    }

    @Test
    fun `diagnosticreport-example-ultrasound 240 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-ultrasound.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("ultrasound", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://snomed.info/sct", obj.category!!.coding[0].system))
        assertTrue(stringMatch("394914008", obj.category!!.coding[0].code))
        assertTrue(stringMatch("Radiology", obj.category!!.coding[0].display))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[1].system))
        assertTrue(stringMatch("RAD", obj.category!!.coding[1].code))
        assertTrue(stringMatch("http://snomed.info/sct", obj.code.coding[0].system))
        assertTrue(stringMatch("45036003", obj.code.coding[0].code))
        assertTrue(stringMatch("Ultrasonography of abdomen", obj.code.coding[0].display))
        assertTrue(stringMatch("Abdominal Ultrasound", obj.code.text))
        assertTrue(stringMatch("Patient/example", obj.subject!!.reference))
        assertEquals("2012-12-01T12:00:00+01:00", obj.effectiveDateTime.toString())
        assertEquals("2012-12-01T12:00:00+01:00", obj.issued.toString())
        assertTrue(stringMatch("Practitioner/example", obj.performer[0].actor.reference))
        assertTrue(stringMatch("A comment about the image", obj.image[0].comment))
        assertTrue(stringMatch("Media/1.2.840.113619075792384", obj.image[0].link.reference))
        assertTrue(stringMatch("WADO example image", obj.image[0].link.display))
        assertTrue(stringMatch("Unremarkable study", obj.conclusion))
    }

    @Test
    fun `diagnosticreport-example-f201-brainct 241 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-f201-brainct.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("f201", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://snomed.info/sct", obj.category!!.coding[0].system))
        assertTrue(stringMatch("394914008", obj.category!!.coding[0].code))
        assertTrue(stringMatch("Radiology", obj.category!!.coding[0].display))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[1].system))
        assertTrue(stringMatch("RAD", obj.category!!.coding[1].code))
        assertTrue(stringMatch("http://snomed.info/sct", obj.code.coding[0].system))
        assertTrue(stringMatch("429858000", obj.code.coding[0].code))
        assertTrue(stringMatch("Computed tomography (CT) of h", obj.code.coding[0].display))
        assertTrue(stringMatch("CT of head-neck", obj.code.text))
        assertTrue(stringMatch("Patient/f201", obj.subject!!.reference))
        assertTrue(stringMatch("Roel", obj.subject!!.display))
        assertEquals("2012-12-01T12:00:00+01:00", obj.effectiveDateTime.toString())
        assertEquals("2012-12-01T12:00:00+01:00", obj.issued.toString())
        assertTrue(stringMatch("Organization/f203", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Blijdorp MC", obj.performer[0].actor.display))
        assertTrue(stringMatch("HEAD and NECK CT DICOM imagin", obj.imagingStudy[0].display))
        assertTrue(stringMatch("CT brains: large tumor spheno", obj.conclusion))
        assertTrue(stringMatch("http://snomed.info/sct", obj.codedDiagnosis[0].coding[0].system))
        assertTrue(stringMatch("188340000", obj.codedDiagnosis[0].coding[0].code))
        assertTrue(stringMatch("Malignant tumor of craniophar", obj.codedDiagnosis[0].coding[0].display))
    }

    @Test
    fun `diagnosticreport-genetics-example-2-familyhistory 242 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-genetics-example-2-familyhistory.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("dg2", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("FamilyMemberHistory", (obj.contained[0] as FamilyMemberHistory).resourceType))
        assertTrue(stringMatch("f1-genetics", (obj.contained[0] as FamilyMemberHistory).id))
        assertTrue(stringMatch("http://hl7.org/fhir/Structure", (obj.contained[0] as FamilyMemberHistory).extension[0].url))
        assertTrue(stringMatch("Observation/dgf1", (obj.contained[0] as FamilyMemberHistory).extension[0].valueReference!!.reference))
        assertTrue(stringMatch("completed", (obj.contained[0] as FamilyMemberHistory).status))
        assertTrue(stringMatch("Patient/example", (obj.contained[0] as FamilyMemberHistory).patient.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/v3/RoleCo", (obj.contained[0] as FamilyMemberHistory).relationship.coding[0].system))
        assertTrue(stringMatch("MTH", (obj.contained[0] as FamilyMemberHistory).relationship.coding[0].code))
        assertTrue(stringMatch("Mother", (obj.contained[0] as FamilyMemberHistory).relationship.coding[0].display))
        assertTrue(stringMatch("http://hl7.org/fhir/Structure", obj.extension[0].url))
        assertTrue(stringMatch("#f1-genetics", obj.extension[0].valueReference!!.reference))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://snomed.info/sct", obj.category!!.coding[0].system))
        assertTrue(stringMatch("15220000", obj.category!!.coding[0].code))
        assertTrue(stringMatch("Laboratory test", obj.category!!.coding[0].display))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[1].system))
        assertTrue(stringMatch("LAB", obj.category!!.coding[1].code))
    }

    @Test
    fun `diagnosticreport-genetics-example-2-familyhistory 243 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-genetics-example-2-familyhistory.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("http://loinc.org", obj.code.coding[0].system))
        assertTrue(stringMatch("55233-1", obj.code.coding[0].code))
        assertTrue(stringMatch("Genetic analysis master panel", obj.code.coding[0].display))
        assertTrue(stringMatch("Patient/example", obj.subject!!.reference))
        assertTrue(stringMatch("Peter James Chalmers(MRN: 123", obj.subject!!.display))
        assertEquals("2015-05-26T15:30:10+01:00", obj.effectiveDateTime.toString())
        assertEquals("2014-05-16T10:28:00+01:00", obj.issued.toString())
        assertTrue(stringMatch("Practitioner/genetics-example", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Molecular Diagnostic Laborato", obj.performer[0].actor.display))
        assertTrue(stringMatch("Specimen/genetics-example2", obj.specimen[0].reference))
        assertTrue(stringMatch("Molecular Specimen ID: MLD45-", obj.specimen[0].display))
        assertTrue(stringMatch("Observation/ob-genetics-3-1", obj.result[0].reference))
        assertTrue(stringMatch("Genetic analysis for BRAC -1", obj.result[0].display))
        assertTrue(stringMatch("Observation/ob-genetics-3-2", obj.result[1].reference))
        assertTrue(stringMatch("Genetic analysis for BRAC -2", obj.result[1].display))
    }

    @Test
    fun `diagnosticreport-example 244 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("101", obj.id))
        assertTrue(stringMatch("http://example.org/fhir/CodeS", obj.meta!!.tag[0].system))
        assertTrue(stringMatch("01", obj.meta!!.tag[0].code))
        assertTrue(stringMatch("Needs Review", obj.meta!!.tag[0].display))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("Observation", (obj.contained[0] as Observation).resourceType))
        assertTrue(stringMatch("r1", (obj.contained[0] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[0] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[0] as Observation).code.coding[0].system))
        assertTrue(stringMatch("718-7", (obj.contained[0] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Hemoglobin [Mass/volume] in B", (obj.contained[0] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Haemoglobin", (obj.contained[0] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[0] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[0] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[0] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(176f), "%.2f".format((obj.contained[0] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[0] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[0] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("g/L", (obj.contained[0] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(135f), "%.2f".format((obj.contained[0] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[0] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[0] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("g/L", (obj.contained[0] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(180f), "%.2f".format((obj.contained[0] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("g/L", (obj.contained[0] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[0] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("g/L", (obj.contained[0] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[1] as Observation).resourceType))
        assertTrue(stringMatch("r2", (obj.contained[1] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[1] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[1] as Observation).code.coding[0].system))
        assertTrue(stringMatch("789-8", (obj.contained[1] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocytes [#/volume] in Bl", (obj.contained[1] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Red Cell Count", (obj.contained[1] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[1] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[1] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[1] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(5.9f), "%.2f".format((obj.contained[1] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*12/L", (obj.contained[1] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[1] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*12/L", (obj.contained[1] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(4.2f), "%.2f".format((obj.contained[1] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*12/L", (obj.contained[1] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[1] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*12/L", (obj.contained[1] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(6.0f), "%.2f".format((obj.contained[1] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*12/L", (obj.contained[1] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[1] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*12/L", (obj.contained[1] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[2] as Observation).resourceType))
        assertTrue(stringMatch("r3", (obj.contained[2] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[2] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[2] as Observation).code.coding[0].system))
        assertTrue(stringMatch("4544-3", (obj.contained[2] as Observation).code.coding[0].code))
    }

    @Test
    fun `diagnosticreport-example 245 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("Hematocrit [Volume Fraction] ", (obj.contained[2] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Haematocrit", (obj.contained[2] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[2] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[2] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[2] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(55f), "%.2f".format((obj.contained[2] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[2] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[2] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[2] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(38f), "%.2f".format((obj.contained[2] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("%", (obj.contained[2] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("%.2f".format(52f), "%.2f".format((obj.contained[2] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("%", (obj.contained[2] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("Observation", (obj.contained[3] as Observation).resourceType))
        assertTrue(stringMatch("r4", (obj.contained[3] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[3] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[3] as Observation).code.coding[0].system))
        assertTrue(stringMatch("787-2", (obj.contained[3] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocyte mean corpuscular ", (obj.contained[3] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Mean Cell Volume", (obj.contained[3] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[3] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[3] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[3] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(99f), "%.2f".format((obj.contained[3] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("fL", (obj.contained[3] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[3] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("fL", (obj.contained[3] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[3] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[3] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(80f), "%.2f".format((obj.contained[3] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("fL", (obj.contained[3] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[3] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("fL", (obj.contained[3] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(98f), "%.2f".format((obj.contained[3] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("fL", (obj.contained[3] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[3] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("fL", (obj.contained[3] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[4] as Observation).resourceType))
        assertTrue(stringMatch("r5", (obj.contained[4] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[4] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[4] as Observation).code.coding[0].system))
        assertTrue(stringMatch("785-6", (obj.contained[4] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Erythrocyte mean corpuscular ", (obj.contained[4] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Mean Cell Haemoglobin", (obj.contained[4] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[4] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[4] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[4] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(36f), "%.2f".format((obj.contained[4] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("pg", (obj.contained[4] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[4] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("pg", (obj.contained[4] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[4] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("H", (obj.contained[4] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(27f), "%.2f".format((obj.contained[4] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("pg", (obj.contained[4] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[4] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("pg", (obj.contained[4] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(35f), "%.2f".format((obj.contained[4] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("pg", (obj.contained[4] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[4] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("pg", (obj.contained[4] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[5] as Observation).resourceType))
        assertTrue(stringMatch("r6", (obj.contained[5] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[5] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[5] as Observation).code.coding[0].system))
        assertTrue(stringMatch("777-3", (obj.contained[5] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Platelets [#/volume] in Blood", (obj.contained[5] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Platelet Count", (obj.contained[5] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[5] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[5] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[5] as Observation).performer[0].display))
    }

    @Test
    fun `diagnosticreport-example 246 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("%.2f".format(444f), "%.2f".format((obj.contained[5] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[5] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[5] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[5] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(150f), "%.2f".format((obj.contained[5] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[5] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[5] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[5] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(450f), "%.2f".format((obj.contained[5] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[5] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[5] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[5] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[6] as Observation).resourceType))
        assertTrue(stringMatch("r7", (obj.contained[6] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[6] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[6] as Observation).code.coding[0].system))
        assertTrue(stringMatch("6690-2", (obj.contained[6] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Leukocytes [#/volume] in Bloo", (obj.contained[6] as Observation).code.coding[0].display))
        assertTrue(stringMatch("White Cell Count", (obj.contained[6] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[6] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[6] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[6] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(4.6f), "%.2f".format((obj.contained[6] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[6] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[6] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[6] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(4.0f), "%.2f".format((obj.contained[6] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[6] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[6] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[6] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(11.0f), "%.2f".format((obj.contained[6] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[6] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[6] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[6] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[7] as Observation).resourceType))
        assertTrue(stringMatch("r8", (obj.contained[7] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[7] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[7] as Observation).code.coding[0].system))
        assertTrue(stringMatch("770-8", (obj.contained[7] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Neutrophils/100 leukocytes in", (obj.contained[7] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Neutrophils", (obj.contained[7] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[7] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[7] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[7] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[7] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[7] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[7] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[7] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[8] as Observation).resourceType))
        assertTrue(stringMatch("r9", (obj.contained[8] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[8] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[8] as Observation).code.coding[0].system))
        assertTrue(stringMatch("751-8", (obj.contained[8] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Neutrophils [#/volume] in Blo", (obj.contained[8] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Neutrophils", (obj.contained[8] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[8] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[8] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[8] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.9f), "%.2f".format((obj.contained[8] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[8] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[8] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[8] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[8] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("LL", (obj.contained[8] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(2.0f), "%.2f".format((obj.contained[8] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[8] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[8] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[8] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(7.5f), "%.2f".format((obj.contained[8] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[8] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[8] as Observation).referenceRange[0].high!!.system))
    }

    @Test
    fun `diagnosticreport-example 247 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("10*9/L", (obj.contained[8] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[9] as Observation).resourceType))
        assertTrue(stringMatch("r10", (obj.contained[9] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[9] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[9] as Observation).code.coding[0].system))
        assertTrue(stringMatch("736-9", (obj.contained[9] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Lymphocytes/100 leukocytes in", (obj.contained[9] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Lymphocytes", (obj.contained[9] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[9] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[9] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[9] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[9] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[9] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[9] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[9] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[10] as Observation).resourceType))
        assertTrue(stringMatch("r11", (obj.contained[10] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[10] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[10] as Observation).code.coding[0].system))
        assertTrue(stringMatch("731-0", (obj.contained[10] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Lymphocytes [#/volume] in Blo", (obj.contained[10] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Lymphocytes", (obj.contained[10] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[10] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[10] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[10] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.9f), "%.2f".format((obj.contained[10] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[10] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[10] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[10] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[10] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("L", (obj.contained[10] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(1.1f), "%.2f".format((obj.contained[10] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[10] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[10] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[10] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(4.0f), "%.2f".format((obj.contained[10] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[10] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[10] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[10] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[11] as Observation).resourceType))
        assertTrue(stringMatch("r12", (obj.contained[11] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[11] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[11] as Observation).code.coding[0].system))
        assertTrue(stringMatch("5905-5", (obj.contained[11] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Monocytes/100 leukocytes in B", (obj.contained[11] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Monocytes", (obj.contained[11] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[11] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[11] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[11] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[11] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[11] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[11] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[11] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[12] as Observation).resourceType))
        assertTrue(stringMatch("r13", (obj.contained[12] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[12] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[12] as Observation).code.coding[0].system))
        assertTrue(stringMatch("742-7", (obj.contained[12] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Monocytes [#/volume] in Blood", (obj.contained[12] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Monocytes", (obj.contained[12] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[12] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[12] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[12] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.9f), "%.2f".format((obj.contained[12] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[12] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[12] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[12] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(0.2f), "%.2f".format((obj.contained[12] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[12] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[12] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[12] as Observation).referenceRange[0].low!!.code))
    }

    @Test
    fun `diagnosticreport-example 248 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("%.2f".format(1.0f), "%.2f".format((obj.contained[12] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[12] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[12] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[12] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[13] as Observation).resourceType))
        assertTrue(stringMatch("r14", (obj.contained[13] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[13] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[13] as Observation).code.coding[0].system))
        assertTrue(stringMatch("713-8", (obj.contained[13] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Eosinophils/100 leukocytes in", (obj.contained[13] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Eosinophils", (obj.contained[13] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[13] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[13] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[13] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[13] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[13] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[13] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[13] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[14] as Observation).resourceType))
        assertTrue(stringMatch("r15", (obj.contained[14] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[14] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[14] as Observation).code.coding[0].system))
        assertTrue(stringMatch("711-2", (obj.contained[14] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Eosinophils [#/volume] in Blo", (obj.contained[14] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Eosinophils", (obj.contained[14] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[14] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[14] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[14] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.92f), "%.2f".format((obj.contained[14] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[14] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[14] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[14] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0078", (obj.contained[14] as Observation).interpretation!!.coding[0].system))
        assertTrue(stringMatch("HH", (obj.contained[14] as Observation).interpretation!!.coding[0].code))
        assertTrue(stringMatch("%.2f".format(0.04f), "%.2f".format((obj.contained[14] as Observation).referenceRange[0].low!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[14] as Observation).referenceRange[0].low!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[14] as Observation).referenceRange[0].low!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[14] as Observation).referenceRange[0].low!!.code))
        assertTrue(stringMatch("%.2f".format(0.40f), "%.2f".format((obj.contained[14] as Observation).referenceRange[0].high!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[14] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[14] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[14] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[15] as Observation).resourceType))
        assertTrue(stringMatch("r16", (obj.contained[15] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[15] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[15] as Observation).code.coding[0].system))
        assertTrue(stringMatch("706-2", (obj.contained[15] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Basophils/100 leukocytes in B", (obj.contained[15] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Basophils", (obj.contained[15] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[15] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[15] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[15] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(20f), "%.2f".format((obj.contained[15] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("%", (obj.contained[15] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[15] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("%", (obj.contained[15] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("Observation", (obj.contained[16] as Observation).resourceType))
        assertTrue(stringMatch("r17", (obj.contained[16] as Observation).id))
        assertTrue(stringMatch("final", (obj.contained[16] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", (obj.contained[16] as Observation).code.coding[0].system))
        assertTrue(stringMatch("704-7", (obj.contained[16] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Basophils [#/volume] in Blood", (obj.contained[16] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Basophils", (obj.contained[16] as Observation).code.text))
        assertTrue(stringMatch("Patient/pat2", (obj.contained[16] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.contained[16] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.contained[16] as Observation).performer[0].display))
        assertTrue(stringMatch("%.2f".format(0.92f), "%.2f".format((obj.contained[16] as Observation).valueQuantity!!.value)))
        assertTrue(stringMatch("x10*9/L", (obj.contained[16] as Observation).valueQuantity!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[16] as Observation).valueQuantity!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[16] as Observation).valueQuantity!!.code))
        assertTrue(stringMatch("%.2f".format(0.21f), "%.2f".format((obj.contained[16] as Observation).referenceRange[0].high!!.value)))
    }

    @Test
    fun `diagnosticreport-example 249 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("x10*9/L", (obj.contained[16] as Observation).referenceRange[0].high!!.unit))
        assertTrue(stringMatch("http://unitsofmeasure.org", (obj.contained[16] as Observation).referenceRange[0].high!!.system))
        assertTrue(stringMatch("10*9/L", (obj.contained[16] as Observation).referenceRange[0].high!!.code))
        assertTrue(stringMatch("http://acme.com/lab/reports", obj.identifier[0].system))
        assertTrue(stringMatch("5234342", obj.identifier[0].value))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[0].system))
        assertTrue(stringMatch("HM", obj.category!!.coding[0].code))
        assertTrue(stringMatch("http://loinc.org", obj.code.coding[0].system))
        assertTrue(stringMatch("58410-2", obj.code.coding[0].code))
        assertTrue(stringMatch("Complete blood count (hemogra", obj.code.coding[0].display))
        assertTrue(stringMatch("CBC", obj.code.coding[1].code))
        assertTrue(stringMatch("MASTER FULL BLOOD COUNT", obj.code.coding[1].display))
        assertTrue(stringMatch("Complete Blood Count", obj.code.text))
        assertTrue(stringMatch("Patient/pat2", obj.subject!!.reference))
        assertTrue(stringMatch("Encounter/example", obj.context!!.reference))
        assertEquals("2011-03-04T08:30:00+11:00", obj.effectiveDateTime.toString())
        assertEquals("2011-03-04T11:45:33+11:00", obj.issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", obj.performer[0].actor.display))
        assertTrue(stringMatch("#r1", obj.result[0].reference))
        assertTrue(stringMatch("#r2", obj.result[1].reference))
        assertTrue(stringMatch("#r3", obj.result[2].reference))
        assertTrue(stringMatch("#r4", obj.result[3].reference))
        assertTrue(stringMatch("#r5", obj.result[4].reference))
        assertTrue(stringMatch("#r6", obj.result[5].reference))
        assertTrue(stringMatch("#r7", obj.result[6].reference))
        assertTrue(stringMatch("#r8", obj.result[7].reference))
        assertTrue(stringMatch("#r9", obj.result[8].reference))
        assertTrue(stringMatch("#r10", obj.result[9].reference))
        assertTrue(stringMatch("#r11", obj.result[10].reference))
        assertTrue(stringMatch("#r12", obj.result[11].reference))
        assertTrue(stringMatch("#r13", obj.result[12].reference))
        assertTrue(stringMatch("#r14", obj.result[13].reference))
        assertTrue(stringMatch("#r15", obj.result[14].reference))
        assertTrue(stringMatch("#r16", obj.result[15].reference))
        assertTrue(stringMatch("#r17", obj.result[16].reference))
        assertTrue(stringMatch("application/pdf", obj.presentedForm[0].contentType))
        assertTrue(stringMatch("en-AU", obj.presentedForm[0].language))
        assertTrue(stringMatch("JVBERi0xLjQKJcfsj6IKNSAwIG9ia", obj.presentedForm[0].data))
        assertTrue(stringMatch("HTML Report", obj.presentedForm[0].title))
    }

    @Test
    fun `diagnosticreport-example-papsmear 250 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-papsmear.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("pap", obj.id))
        assertTrue(stringMatch("additional", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://loinc.org", obj.code.coding[0].system))
        assertTrue(stringMatch("47527-7", obj.code.coding[0].code))
        assertTrue(stringMatch("Patient/b248b1b2-1686-4b94-99", obj.subject!!.reference))
        assertEquals("2013-02-11T10:33:33+11:00", obj.effectiveDateTime.toString())
        assertEquals("2013-02-13T11:45:33+11:00", obj.issued.toString())
        assertTrue(stringMatch("Practitioner/example", obj.performer[0].actor.reference))
    }

    @Test
    fun `diagnosticreport-example-gingival-mass 251 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-gingival-mass.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("gingival-mass", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("https://www.acmeonline.com", obj.identifier[0].system))
        assertTrue(stringMatch("P73456090", obj.identifier[0].value))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0074", obj.category!!.coding[0].system))
        assertTrue(stringMatch("PAT", obj.category!!.coding[0].code))
        assertTrue(stringMatch("Pathology (gross & histopath,", obj.category!!.coding[0].display))
        assertTrue(stringMatch("Pathology", obj.category!!.text))
        assertTrue(stringMatch("https://www.acmeonline.com", obj.code.coding[0].system))
        assertTrue(stringMatch("4503", obj.code.coding[0].code))
        assertTrue(stringMatch("Biopsy without Microscopic De", obj.code.coding[0].display))
        assertTrue(stringMatch("Biopsy without Microscopic De", obj.code.text))
        assertTrue(stringMatch("Max Jones", obj.subject!!.display))
        assertEquals("2017-03-02", obj.effectiveDateTime.toString())
        assertEquals("2017-03-15T08:13:08Z", obj.issued.toString())
        assertTrue(stringMatch("Acme Animal Labs", obj.performer[0].actor.display))
    }

    @Test
    fun `diagnosticreport-example-gingival-mass 252 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-gingival-mass.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("application/pdf", obj.presentedForm[0].contentType))
        assertTrue(stringMatch("en", obj.presentedForm[0].language))
        assertTrue(stringMatch("JVBERi0xLjcKCjQgMCBvYmoKKElkZ", obj.presentedForm[0].data))
        assertTrue(stringMatch("LAB ID: P73456090 MAX JONES B", obj.presentedForm[0].title))
    }

    @Test
    fun `diagnosticreport-example-pgx 253 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-pgx.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("example-pgx", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("ProcedureRequest/example-pgx", obj.basedOn[0].reference))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("https://system/PGxReport", obj.code.coding[0].system))
        assertTrue(stringMatch("PGxReport", obj.code.coding[0].code))
        assertTrue(stringMatch("Pharmacogenetics Report", obj.code.coding[0].display))
        assertTrue(stringMatch("Pharmacogenetics Report", obj.code.text))
        assertTrue(stringMatch("Patient/899962", obj.subject!!.reference))
        assertTrue(stringMatch("Bob Smith", obj.subject!!.display))
        assertEquals("2016-10-15T12:34:56+11:00", obj.effectiveDateTime.toString())
        assertEquals("2016-10-20T14:00:05+11:00", obj.issued.toString())
        assertTrue(stringMatch("Organization/4829", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Observation/example-phenotype", obj.result[0].reference))
        assertTrue(stringMatch("PDF", obj.presentedForm[0].contentType))
        assertTrue(stringMatch("en", obj.presentedForm[0].language))
        assertTrue(stringMatch("cGRmSW5CYXNlNjRCaW5hcnk=", obj.presentedForm[0].data))
        assertTrue(stringMatch("571ef9c5655840f324e679072ed62", obj.presentedForm[0].hash))
        assertTrue(stringMatch("Pharmacogenetics Report", obj.presentedForm[0].title))
        assertEquals("2016-10-20T20:00:00+11:00", obj.presentedForm[0].creation.toString())
    }

    @Test
    fun `diagnosticreport-example-dxa 254 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-example-dxa.json").readTextAndClose()
        val obj = mapper.fromJson(json, DiagnosticReport::class.java)
        assertTrue(stringMatch("DiagnosticReport", obj.resourceType))
        assertTrue(stringMatch("102", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("final", obj.status))
        assertTrue(stringMatch("http://loinc.org", obj.code.coding[0].system))
        assertTrue(stringMatch("38269-7", obj.code.coding[0].code))
        assertTrue(stringMatch("DXA BONE DENSITOMETRY", obj.code.text))
        assertTrue(stringMatch("Patient/pat2", obj.subject!!.reference))
        assertEquals("2008-06-17", obj.effectiveDateTime.toString())
        assertEquals("2008-06-18T09:23:00+10:00", obj.issued.toString())
        assertTrue(stringMatch("http://snomed.info/sct", obj.performer[0].role!!.coding[0].system))
        assertTrue(stringMatch("66862007", obj.performer[0].role!!.coding[0].code))
        assertTrue(stringMatch("Radiologist", obj.performer[0].role!!.coding[0].display))
        assertTrue(stringMatch("Radiologist", obj.performer[0].role!!.text))
        assertTrue(stringMatch("Practitioner/3ad0687e-f477-46", obj.performer[0].actor.reference))
        assertTrue(stringMatch("Dr Henry Seven", obj.performer[0].actor.display))
        assertTrue(stringMatch("Observation/bmd", obj.result[0].reference))
        assertTrue(stringMatch("http://snomed.info/sct", obj.codedDiagnosis[0].coding[0].system))
        assertTrue(stringMatch("391040000", obj.codedDiagnosis[0].coding[0].code))
        assertTrue(stringMatch("At risk of osteoporotic fract", obj.codedDiagnosis[0].coding[0].display))
    }
}
