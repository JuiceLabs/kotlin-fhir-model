package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class ConceptMapDataTest : DataTests() {
    @Test
    fun `conceptmap-example 512 Test`() {
        val json = File("./src/test/resources/model/sample_data/conceptmap-example.json").readTextAndClose()
        val obj = mapper.fromJson(json, ConceptMap::class.java)
        assertTrue(stringMatch("ConceptMap", obj.resourceType))
        assertTrue(stringMatch("101", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/ConceptMa", obj.url))
        assertTrue(stringMatch("urn:ietf:rfc:3986", obj.identifier!!.system))
        assertTrue(stringMatch("urn:uuid:53cd62ee-033e-414c-9", obj.identifier!!.value))
        assertTrue(stringMatch("20120613", obj.version))
        assertTrue(stringMatch("FHIR-v3-Address-Use", obj.name))
        assertTrue(stringMatch("FHIR/v3 Address Use Mapping", obj.title))
        assertTrue(stringMatch("draft", obj.status))
        assertEquals(true, if (obj.experimental != null) obj.experimental else false, "Field: obj.experimental")
        assertTrue(stringMatch("2012-06-13", obj.date))
        assertTrue(stringMatch("HL7, Inc", obj.publisher))
        assertTrue(stringMatch("FHIR project team (example)", obj.contact[0].name))
        assertTrue(stringMatch("url", obj.contact[0].telecom[0].system))
        assertTrue(stringMatch("http://hl7.org/fhir", obj.contact[0].telecom[0].value))
        assertTrue(stringMatch("A mapping between the FHIR an", obj.description))
        assertTrue(stringMatch("http://hl7.org/fhir/usage-con", obj.useContext[0].code.system))
        assertTrue(stringMatch("venue", obj.useContext[0].code.code))
        assertTrue(stringMatch("for CDA Usage", obj.useContext[0].valueCodeableConcept.text))
        assertTrue(stringMatch("To help implementers map from", obj.purpose))
        assertTrue(stringMatch("Creative Commons 0", obj.copyright))
        assertTrue(stringMatch("http://hl7.org/fhir/ValueSet/", obj.sourceUri))
        assertTrue(stringMatch("http://hl7.org/fhir/ValueSet/", obj.targetUri))
        assertTrue(stringMatch("http://hl7.org/fhir/address-u", obj.group[0].source))
        assertTrue(stringMatch("http://hl7.org/fhir/v3/Addres", obj.group[0].target))
        assertTrue(stringMatch("home", obj.group[0].element[0].code))
        assertTrue(stringMatch("home", obj.group[0].element[0].display))
        assertTrue(stringMatch("H", obj.group[0].element[0].target[0].code))
        assertTrue(stringMatch("home", obj.group[0].element[0].target[0].display))
        assertTrue(stringMatch("work", obj.group[0].element[1].code))
        assertTrue(stringMatch("work", obj.group[0].element[1].display))
        assertTrue(stringMatch("WP", obj.group[0].element[1].target[0].code))
        assertTrue(stringMatch("work place", obj.group[0].element[1].target[0].display))
        assertTrue(stringMatch("temp", obj.group[0].element[2].code))
        assertTrue(stringMatch("temp", obj.group[0].element[2].display))
        assertTrue(stringMatch("TMP", obj.group[0].element[2].target[0].code))
        assertTrue(stringMatch("temporary address", obj.group[0].element[2].target[0].display))
        assertTrue(stringMatch("old", obj.group[0].element[3].code))
        assertTrue(stringMatch("old", obj.group[0].element[3].display))
        assertTrue(stringMatch("BAD", obj.group[0].element[3].target[0].code))
        assertTrue(stringMatch("bad address", obj.group[0].element[3].target[0].display))
        assertTrue(stringMatch("disjoint", obj.group[0].element[3].target[0].equivalence))
        assertTrue(stringMatch("In the HL7 v3 AD, old is hand", obj.group[0].element[3].target[0].comment))
        assertTrue(stringMatch("fixed", obj.group[0].unmapped!!.mode))
        assertTrue(stringMatch("temp", obj.group[0].unmapped!!.code))
        assertTrue(stringMatch("temp", obj.group[0].unmapped!!.display))
    }

    fun `conceptmap-example Init`(obj: Bundle) {
    }

    @Test
    fun `conceptmap-example-2 513 Test`() {
        val json = File("./src/test/resources/model/sample_data/conceptmap-example-2.json").readTextAndClose()
        val obj = mapper.fromJson(json, ConceptMap::class.java)
        assertTrue(stringMatch("ConceptMap", obj.resourceType))
        assertTrue(stringMatch("example2", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/ConceptMa", obj.url))
        assertTrue(stringMatch("FHIR-exanple-2", obj.name))
        assertTrue(stringMatch("FHIR Example 2", obj.title))
        assertTrue(stringMatch("draft", obj.status))
        assertEquals(true, if (obj.experimental != null) obj.experimental else false, "Field: obj.experimental")
        assertTrue(stringMatch("2012-06-13", obj.date))
        assertTrue(stringMatch("HL7, Inc", obj.publisher))
        assertTrue(stringMatch("FHIR project team (example)", obj.contact[0].name))
        assertTrue(stringMatch("url", obj.contact[0].telecom[0].system))
        assertTrue(stringMatch("http://hl7.org/fhir", obj.contact[0].telecom[0].value))
        assertTrue(stringMatch("An example mapping", obj.description))
        assertTrue(stringMatch("To illustrate mapping feature", obj.purpose))
        assertTrue(stringMatch("http://example.org/fhir/examp", obj.sourceUri))
        assertTrue(stringMatch("http://example.org/fhir/examp", obj.targetUri))
        assertTrue(stringMatch("http://example.org/fhir/examp", obj.group[0].source))
        assertTrue(stringMatch("http://example.org/fhir/examp", obj.group[0].target))
        assertTrue(stringMatch("code", obj.group[0].element[0].code))
        assertTrue(stringMatch("Example Code", obj.group[0].element[0].display))
        assertTrue(stringMatch("code2", obj.group[0].element[0].target[0].code))
        assertTrue(stringMatch("Some Example Code", obj.group[0].element[0].target[0].display))
        assertTrue(stringMatch("equivalent", obj.group[0].element[0].target[0].equivalence))
        assertTrue(stringMatch("http://example.org/fhir/DataE", obj.group[0].element[0].target[0].dependsOn[0].property))
        assertTrue(stringMatch("http://example.org/fhir/examp", obj.group[0].element[0].target[0].dependsOn[0].system))
        assertTrue(stringMatch("some-code", obj.group[0].element[0].target[0].dependsOn[0].code))
        assertTrue(stringMatch("Something Coded", obj.group[0].element[0].target[0].dependsOn[0].display))
        assertTrue(stringMatch("other-map", obj.group[0].unmapped!!.mode))
        assertTrue(stringMatch("http://example.org/fhir/Conce", obj.group[0].unmapped!!.url))
    }

    fun `conceptmap-example-2 Init`(obj: Bundle) {
    }

    @Test
    fun `conceptmap-example-specimen-type 514 Test`() {
        val json = File("./src/test/resources/model/sample_data/conceptmap-example-specimen-type.json").readTextAndClose()
        val obj = mapper.fromJson(json, ConceptMap::class.java)
        assertTrue(stringMatch("ConceptMap", obj.resourceType))
        assertTrue(stringMatch("102", obj.id))
        assertTrue(stringMatch("generated", obj.text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", obj.text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/ConceptMa", obj.url))
        assertTrue(stringMatch("20130725", obj.version))
        assertTrue(stringMatch("Specimen mapping from v2 tabl", obj.name))
        assertTrue(stringMatch("draft", obj.status))
        assertEquals(false, if (obj.experimental != null) obj.experimental else false, "Field: obj.experimental")
        assertTrue(stringMatch("2013-07-25", obj.date))
        assertTrue(stringMatch("FHIR project team (original s", obj.publisher))
        assertTrue(stringMatch("url", obj.contact[0].telecom[0].system))
        assertTrue(stringMatch("http://hl7.org/fhir", obj.contact[0].telecom[0].value))
        assertTrue(stringMatch("url", obj.contact[1].telecom[0].system))
        assertTrue(stringMatch("http://www.phconnect.org/grou", obj.contact[1].telecom[0].value))
        assertTrue(stringMatch("http://hl7.org/fhir/ValueSet/", obj.sourceReference!!.reference))
        assertTrue(stringMatch("http://snomed.info/id?fhir_vs", obj.targetReference!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0487", obj.group[0].source))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].target))
        assertTrue(stringMatch("ACNE", obj.group[0].element[0].code))
        assertTrue(stringMatch("309068002", obj.group[0].element[0].target[0].code))
        assertTrue(stringMatch("ACNFLD", obj.group[0].element[1].code))
        assertTrue(stringMatch("119323008", obj.group[0].element[1].target[0].code))
        assertTrue(stringMatch("HL7 term is a historical term", obj.group[0].element[1].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[1].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[1].target[0].product[0].system))
        assertTrue(stringMatch("47002008", obj.group[0].element[1].target[0].product[0].code))
        assertTrue(stringMatch("AIRS", obj.group[0].element[2].code))
        assertTrue(stringMatch("446302006", obj.group[0].element[2].target[0].code))
        assertTrue(stringMatch("ALL", obj.group[0].element[3].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[3].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[3].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[3].target[0].product[0].system))
        assertTrue(stringMatch("7970006", obj.group[0].element[3].target[0].product[0].code))
        assertTrue(stringMatch("AMP", obj.group[0].element[4].code))
        assertTrue(stringMatch("408654003", obj.group[0].element[4].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[4].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[4].target[0].product[0].system))
        assertTrue(stringMatch("81723002", obj.group[0].element[4].target[0].product[0].code))
        assertTrue(stringMatch("ANGI", obj.group[0].element[5].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[5].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[5].target[0].comment))
        assertTrue(stringMatch("ARTC", obj.group[0].element[6].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[6].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[6].target[0].comment))
        assertTrue(stringMatch("ASERU", obj.group[0].element[7].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[7].target[0].equivalence))
        assertTrue(stringMatch("pending", obj.group[0].element[7].target[0].comment))
        assertTrue(stringMatch("ASP", obj.group[0].element[8].code))
        assertTrue(stringMatch("119295008", obj.group[0].element[8].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[8].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[8].target[0].product[0].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[8].target[0].product[0].code))
        assertTrue(stringMatch("ATTE", obj.group[0].element[9].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[9].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[9].target[0].comment))
        assertTrue(stringMatch("AUTOC", obj.group[0].element[10].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[10].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[10].target[0].comment))
        assertTrue(stringMatch("AUTP", obj.group[0].element[11].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[11].target[0].equivalence))
        assertTrue(stringMatch("This really is not a specimen", obj.group[0].element[11].target[0].comment))
        assertTrue(stringMatch("BBL", obj.group[0].element[12].code))
        assertTrue(stringMatch("119304001", obj.group[0].element[12].target[0].code))
        assertTrue(stringMatch("BCYST", obj.group[0].element[13].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[13].target[0].equivalence))
        assertTrue(stringMatch("submitted (PLR155) with paren", obj.group[0].element[13].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[13].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[13].target[0].product[0].system))
        assertTrue(stringMatch("32361000", obj.group[0].element[13].target[0].product[0].code))
        assertTrue(stringMatch("BITE", obj.group[0].element[14].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[14].target[0].equivalence))
        assertTrue(stringMatch("Submit for new term with pare", obj.group[0].element[14].target[0].comment))
        assertTrue(stringMatch("BLEB", obj.group[0].element[15].code))
        assertTrue(stringMatch("309049000", obj.group[0].element[15].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[15].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[15].target[0].product[0].system))
        assertTrue(stringMatch("339008", obj.group[0].element[15].target[0].product[0].code))
        assertTrue(stringMatch("BLIST", obj.group[0].element[16].code))
        assertTrue(stringMatch("309049000", obj.group[0].element[16].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[16].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[16].target[0].product[0].system))
        assertTrue(stringMatch("339008", obj.group[0].element[16].target[0].product[0].code))
        assertTrue(stringMatch("BOIL", obj.group[0].element[17].code))
        assertTrue(stringMatch("119295008", obj.group[0].element[17].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[17].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[17].target[0].product[0].system))
        assertTrue(stringMatch("59843005", obj.group[0].element[17].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[17].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[17].target[0].product[1].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[17].target[0].product[1].code))
        assertTrue(stringMatch("BON", obj.group[0].element[18].code))
        assertTrue(stringMatch("430268003", obj.group[0].element[18].target[0].code))
        assertTrue(stringMatch("BOWL", obj.group[0].element[19].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[19].target[0].equivalence))
        assertTrue(stringMatch("Don't use this term for human", obj.group[0].element[19].target[0].comment))
        assertTrue(stringMatch("BPU", obj.group[0].element[20].code))
        assertTrue(stringMatch("119300005", obj.group[0].element[20].target[0].code))
        assertTrue(stringMatch("BRN", obj.group[0].element[21].code))
        assertTrue(stringMatch("119367005", obj.group[0].element[21].target[0].code))
        assertTrue(stringMatch("BRSH", obj.group[0].element[22].code))
        assertTrue(stringMatch("258415003", obj.group[0].element[22].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[22].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[22].target[0].product[0].system))
        assertTrue(stringMatch("439336003", obj.group[0].element[22].target[0].product[0].code))
        assertTrue(stringMatch("BRTH", obj.group[0].element[23].code))
        assertTrue(stringMatch("119336008", obj.group[0].element[23].target[0].code))
        assertTrue(stringMatch("BRUS", obj.group[0].element[24].code))
        assertTrue(stringMatch("309176002", obj.group[0].element[24].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[24].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[24].target[0].product[0].system))
        assertTrue(stringMatch("80657008", obj.group[0].element[24].target[0].product[0].code))
        assertTrue(stringMatch("BUB", obj.group[0].element[25].code))
        assertTrue(stringMatch("302795002", obj.group[0].element[25].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[25].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[25].target[0].product[0].system))
        assertTrue(stringMatch("11585000", obj.group[0].element[25].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[25].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[25].target[0].product[1].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[25].target[0].product[1].code))
        assertTrue(stringMatch("BULLA", obj.group[0].element[26].code))
        assertTrue(stringMatch("258482009", obj.group[0].element[26].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[26].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[26].target[0].product[0].system))
        assertTrue(stringMatch("339008", obj.group[0].element[26].target[0].product[0].code))
        assertTrue(stringMatch("BX", obj.group[0].element[27].code))
        assertTrue(stringMatch("258415003", obj.group[0].element[27].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[27].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[27].target[0].product[0].system))
        assertTrue(stringMatch("86273004", obj.group[0].element[27].target[0].product[0].code))
        assertTrue(stringMatch("CALC", obj.group[0].element[28].code))
        assertTrue(stringMatch("119350003", obj.group[0].element[28].target[0].code))
        assertTrue(stringMatch("CARBU", obj.group[0].element[29].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[29].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[29].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[29].target[0].product[0].system))
        assertTrue(stringMatch("41570003", obj.group[0].element[29].target[0].product[0].code))
        assertTrue(stringMatch("CAT", obj.group[0].element[30].code))
        assertTrue(stringMatch("119311002", obj.group[0].element[30].target[0].code))
        assertTrue(stringMatch("CBITE", obj.group[0].element[31].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[31].target[0].equivalence))
        assertTrue(stringMatch("Submit for new term with pare", obj.group[0].element[31].target[0].comment))
        assertTrue(stringMatch("CLIPP", obj.group[0].element[32].code))
        assertTrue(stringMatch("119327009", obj.group[0].element[32].target[0].code))
        assertTrue(stringMatch("Be more specific use either: ", obj.group[0].element[32].target[0].comment))
        assertTrue(stringMatch("CNJT", obj.group[0].element[33].code))
        assertTrue(stringMatch("119401005", obj.group[0].element[33].target[0].code))
        assertTrue(stringMatch("CNJT", obj.group[0].element[34].code))
        assertTrue(stringMatch("128160006", obj.group[0].element[34].target[0].code))
        assertTrue(stringMatch("CNJT", obj.group[0].element[35].code))
        assertTrue(stringMatch("258498002", obj.group[0].element[35].target[0].code))
        assertTrue(stringMatch("COL", obj.group[0].element[36].code))
        assertTrue(stringMatch("119329007", obj.group[0].element[36].target[0].code))
        assertTrue(stringMatch("CONE", obj.group[0].element[37].code))
        assertTrue(stringMatch("399713008", obj.group[0].element[37].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[37].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[37].target[0].product[0].system))
        assertTrue(stringMatch("54535009", obj.group[0].element[37].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[37].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[37].target[0].product[1].system))
        assertTrue(stringMatch("71252005", obj.group[0].element[37].target[0].product[1].code))
        assertTrue(stringMatch("CSCR", obj.group[0].element[38].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[38].target[0].equivalence))
        assertTrue(stringMatch("submit for new term with pare", obj.group[0].element[38].target[0].comment))
        assertTrue(stringMatch("CSERU", obj.group[0].element[39].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[39].target[0].equivalence))
        assertTrue(stringMatch("pending", obj.group[0].element[39].target[0].comment))
        assertTrue(stringMatch("CSITE", obj.group[0].element[40].code))
        assertTrue(stringMatch("258507003", obj.group[0].element[40].target[0].code))
        assertTrue(stringMatch("Prefer to have aspirate of th", obj.group[0].element[40].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[40].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[40].target[0].product[0].system))
        assertTrue(stringMatch("386144009", obj.group[0].element[40].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[40].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[40].target[0].product[1].system))
        assertTrue(stringMatch("285570007", obj.group[0].element[40].target[0].product[1].code))
        assertTrue(stringMatch("CSMY", obj.group[0].element[41].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[41].target[0].code))
        assertTrue(stringMatch("CST", obj.group[0].element[42].code))
        assertTrue(stringMatch("258453008", obj.group[0].element[42].target[0].code))
        assertTrue(stringMatch("CSVR", obj.group[0].element[43].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[43].target[0].equivalence))
        assertTrue(stringMatch("TBD - may use blood and SPM-6", obj.group[0].element[43].target[0].comment))
        assertTrue(stringMatch("CTP", obj.group[0].element[44].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[44].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[44].target[0].comment))
        assertTrue(stringMatch("CVPS", obj.group[0].element[45].code))
        assertTrue(stringMatch("258507003", obj.group[0].element[45].target[0].code))
        assertTrue(stringMatch("CVPT", obj.group[0].element[46].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[46].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[46].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[46].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[46].target[0].product[0].system))
        assertTrue(stringMatch("445085009", obj.group[0].element[46].target[0].product[0].code))
        assertTrue(stringMatch("CYN", obj.group[0].element[47].code))
        assertTrue(stringMatch("119368000", obj.group[0].element[47].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[47].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[47].target[0].product[0].system))
        assertTrue(stringMatch("27925004", obj.group[0].element[47].target[0].product[0].code))
        assertTrue(stringMatch("CYST", obj.group[0].element[48].code))
        assertTrue(stringMatch("119368000", obj.group[0].element[48].target[0].code))
        assertTrue(stringMatch("DBITE", obj.group[0].element[49].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[49].target[0].equivalence))
        assertTrue(stringMatch("Submit for new term with pare", obj.group[0].element[49].target[0].comment))
        assertTrue(stringMatch("DCS", obj.group[0].element[50].code))
        assertTrue(stringMatch("119335007", obj.group[0].element[50].target[0].code))
        assertTrue(stringMatch("DEC", obj.group[0].element[51].code))
        assertTrue(stringMatch("258505006", obj.group[0].element[51].target[0].code))
        assertTrue(stringMatch("DEION", obj.group[0].element[52].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[52].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[52].target[0].comment))
        assertTrue(stringMatch("DIA", obj.group[0].element[53].code))
        assertTrue(stringMatch("119360007", obj.group[0].element[53].target[0].code))
        assertTrue(stringMatch("DISCHG", obj.group[0].element[54].code))
        assertTrue(stringMatch("258439008", obj.group[0].element[54].target[0].code))
        assertTrue(stringMatch("DIV", obj.group[0].element[55].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[55].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[55].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[55].target[0].product[0].system))
        assertTrue(stringMatch("31113003", obj.group[0].element[55].target[0].product[0].code))
        assertTrue(stringMatch("DRN", obj.group[0].element[56].code))
        assertTrue(stringMatch("119306004", obj.group[0].element[56].target[0].code))
        assertTrue(stringMatch("DRNG", obj.group[0].element[57].code))
        assertTrue(stringMatch("258455001", obj.group[0].element[57].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[57].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[57].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[57].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[57].target[0].product[0].code))
        assertTrue(stringMatch("DRNGP", obj.group[0].element[58].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[58].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[58].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[58].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[58].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[58].target[0].product[0].code))
        assertTrue(stringMatch("EARW", obj.group[0].element[59].code))
        assertTrue(stringMatch("122580007", obj.group[0].element[59].target[0].code))
        assertTrue(stringMatch("EBRUSH", obj.group[0].element[60].code))
        assertTrue(stringMatch("309210009", obj.group[0].element[60].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[60].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[60].target[0].product[0].system))
        assertTrue(stringMatch("36213007", obj.group[0].element[60].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[60].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[60].target[0].product[1].system))
        assertTrue(stringMatch("32849002", obj.group[0].element[60].target[0].product[1].code))
        assertTrue(stringMatch("EEYE", obj.group[0].element[61].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[61].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[61].target[0].comment))
        assertTrue(stringMatch("EFF", obj.group[0].element[62].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[62].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[62].target[0].comment))
        assertTrue(stringMatch("EFFUS", obj.group[0].element[63].code))
        assertTrue(stringMatch("258440005", obj.group[0].element[63].target[0].code))
        assertTrue(stringMatch("EFOD", obj.group[0].element[64].code))
        assertTrue(stringMatch("119320006", obj.group[0].element[64].target[0].code))
        assertTrue(stringMatch("EISO", obj.group[0].element[65].code))
        assertTrue(stringMatch("258536003", obj.group[0].element[65].target[0].code))
        assertTrue(stringMatch("ELT", obj.group[0].element[66].code))
        assertTrue(stringMatch("119314005", obj.group[0].element[66].target[0].code))
        assertTrue(stringMatch("ENVIR", obj.group[0].element[67].code))
        assertTrue(stringMatch("119324002", obj.group[0].element[67].target[0].code))
        assertTrue(stringMatch("EOTH", obj.group[0].element[68].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[68].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[68].target[0].comment))
        assertTrue(stringMatch("ESOI", obj.group[0].element[69].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[69].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[69].target[0].comment))
        assertTrue(stringMatch("ESOS", obj.group[0].element[70].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[70].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[70].target[0].comment))
        assertTrue(stringMatch("ETA", obj.group[0].element[71].code))
        assertTrue(stringMatch("119307008", obj.group[0].element[71].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[71].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[71].target[0].product[0].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[71].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[71].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[71].target[0].product[1].system))
        assertTrue(stringMatch("321667001", obj.group[0].element[71].target[0].product[1].code))
        assertTrue(stringMatch("ETTP", obj.group[0].element[72].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[72].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[72].target[0].comment))
        assertTrue(stringMatch("ETTUB", obj.group[0].element[73].code))
        assertTrue(stringMatch("119307008", obj.group[0].element[73].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[73].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[73].target[0].product[0].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[73].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[73].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[73].target[0].product[1].system))
        assertTrue(stringMatch("321667001", obj.group[0].element[73].target[0].product[1].code))
        assertTrue(stringMatch("EWHI", obj.group[0].element[74].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[74].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[74].target[0].comment))
        assertTrue(stringMatch("EXG", obj.group[0].element[75].code))
        assertTrue(stringMatch("119336008", obj.group[0].element[75].target[0].code))
        assertTrue(stringMatch("EXS", obj.group[0].element[76].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[76].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[76].target[0].comment))
        assertTrue(stringMatch("EXUDTE", obj.group[0].element[77].code))
        assertTrue(stringMatch("258441009", obj.group[0].element[77].target[0].code))
        assertTrue(stringMatch("FAW", obj.group[0].element[78].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[78].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[78].target[0].comment))
        assertTrue(stringMatch("FBLOOD", obj.group[0].element[79].code))
        assertTrue(stringMatch("119297000", obj.group[0].element[79].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[79].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[79].target[0].product[0].system))
        assertTrue(stringMatch("303112003", obj.group[0].element[79].target[0].product[0].code))
        assertTrue(stringMatch("FGA", obj.group[0].element[80].code))
        assertTrue(stringMatch("168139001", obj.group[0].element[80].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[80].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[80].target[0].product[0].system))
        assertTrue(stringMatch("83670000", obj.group[0].element[80].target[0].product[0].code))
        assertTrue(stringMatch("FIST", obj.group[0].element[81].code))
        assertTrue(stringMatch("119370009", obj.group[0].element[81].target[0].code))
        assertTrue(stringMatch("FLD", obj.group[0].element[82].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[82].target[0].code))
        assertTrue(stringMatch("FLT", obj.group[0].element[83].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[83].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[83].target[0].comment))
        assertTrue(stringMatch("FLU", obj.group[0].element[84].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[84].target[0].code))
        assertTrue(stringMatch("FLUID", obj.group[0].element[85].code))
        assertTrue(stringMatch("258442002", obj.group[0].element[85].target[0].code))
        assertTrue(stringMatch("FOLEY", obj.group[0].element[86].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[86].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[86].target[0].comment))
        assertTrue(stringMatch("FRS", obj.group[0].element[87].code))
        assertTrue(stringMatch("258442002", obj.group[0].element[87].target[0].code))
        assertTrue(stringMatch("this term is not specific eno", obj.group[0].element[87].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[87].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[87].target[0].product[0].system))
        assertTrue(stringMatch("272626006", obj.group[0].element[87].target[0].product[0].code))
        assertTrue(stringMatch("FSCLP", obj.group[0].element[88].code))
        assertTrue(stringMatch("309502007", obj.group[0].element[88].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[88].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[88].target[0].product[0].system))
        assertTrue(stringMatch("41695006", obj.group[0].element[88].target[0].product[0].code))
        assertTrue(stringMatch("FUR", obj.group[0].element[89].code))
        assertTrue(stringMatch("119295008", obj.group[0].element[89].target[0].code))
        assertTrue(stringMatch("Further describe the sample a", obj.group[0].element[89].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[89].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[89].target[0].product[0].system))
        assertTrue(stringMatch("59843005", obj.group[0].element[89].target[0].product[0].code))
        assertTrue(stringMatch("GAS", obj.group[0].element[90].code))
        assertTrue(stringMatch("119317003", obj.group[0].element[90].target[0].code))
        assertTrue(stringMatch("GASA", obj.group[0].element[91].code))
        assertTrue(stringMatch("168137004", obj.group[0].element[91].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[91].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[91].target[0].product[0].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[91].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[91].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[91].target[0].product[1].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[91].target[0].product[1].code))
        assertTrue(stringMatch("GASAN", obj.group[0].element[92].code))
        assertTrue(stringMatch("119379005", obj.group[0].element[92].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[92].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[92].target[0].product[0].system))
        assertTrue(stringMatch("66051006", obj.group[0].element[92].target[0].product[0].code))
        assertTrue(stringMatch("GASBR", obj.group[0].element[93].code))
        assertTrue(stringMatch("309213006", obj.group[0].element[93].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[93].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[93].target[0].product[0].system))
        assertTrue(stringMatch("235157009", obj.group[0].element[93].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[93].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[93].target[0].product[1].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[93].target[0].product[1].code))
        assertTrue(stringMatch("GASD", obj.group[0].element[94].code))
        assertTrue(stringMatch("258459007", obj.group[0].element[94].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[94].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[94].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[94].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[94].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[94].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[94].target[0].product[1].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[94].target[0].product[1].code))
        assertTrue(stringMatch("GAST", obj.group[0].element[95].code))
        assertTrue(stringMatch("258459007", obj.group[0].element[95].target[0].code))
        assertTrue(stringMatch("GENV", obj.group[0].element[96].code))
        assertTrue(stringMatch("119394009", obj.group[0].element[96].target[0].code))
        assertTrue(stringMatch("GRAFT", obj.group[0].element[97].code))
        assertTrue(stringMatch("440493002", obj.group[0].element[97].target[0].code))
        assertTrue(stringMatch("GRANU", obj.group[0].element[98].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[98].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[98].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[98].target[0].product[0].system))
        assertTrue(stringMatch("45647009", obj.group[0].element[98].target[0].product[0].code))
        assertTrue(stringMatch("GROSH", obj.group[0].element[99].code))
        assertTrue(stringMatch("119311002", obj.group[0].element[99].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[99].target[0].comment))
        assertTrue(stringMatch("GSOL", obj.group[0].element[100].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[100].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[100].target[0].comment))
        assertTrue(stringMatch("GSPEC", obj.group[0].element[101].code))
        assertTrue(stringMatch("309211008", obj.group[0].element[101].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[101].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[101].target[0].product[0].system))
        assertTrue(stringMatch("79121003", obj.group[0].element[101].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[101].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[101].target[0].product[1].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[101].target[0].product[1].code))
        assertTrue(stringMatch("GT", obj.group[0].element[102].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[102].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[102].target[0].comment))
        assertTrue(stringMatch("GTUBE", obj.group[0].element[103].code))
        assertTrue(stringMatch("258459007", obj.group[0].element[103].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[103].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[103].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[103].target[0].product[0].system))
        assertTrue(stringMatch("127490009", obj.group[0].element[103].target[0].product[0].code))
    }

    @Test
    fun `conceptmap-example-specimen-type 515 Test`() {
        val json = File("./src/test/resources/model/sample_data/conceptmap-example-specimen-type.json").readTextAndClose()
        val obj = mapper.fromJson(json, ConceptMap::class.java)
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[103].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[103].target[0].product[1].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[103].target[0].product[1].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[103].target[0].product[2].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[103].target[0].product[2].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[103].target[0].product[2].code))
        assertTrue(stringMatch("HBITE", obj.group[0].element[104].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[104].target[0].equivalence))
        assertTrue(stringMatch("Submit for new term with pare", obj.group[0].element[104].target[0].comment))
        assertTrue(stringMatch("HBLUD", obj.group[0].element[105].code))
        assertTrue(stringMatch("119297000", obj.group[0].element[105].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[105].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[105].target[0].product[0].system))
        assertTrue(stringMatch("303113008", obj.group[0].element[105].target[0].product[0].code))
        assertTrue(stringMatch("HEMAQ", obj.group[0].element[106].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[106].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[106].target[0].comment))
        assertTrue(stringMatch("HEMO", obj.group[0].element[107].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[107].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[107].target[0].comment))
        assertTrue(stringMatch("HERNI", obj.group[0].element[108].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[108].target[0].code))
        assertTrue(stringMatch("HEV", obj.group[0].element[109].code))
        assertTrue(stringMatch("119306004", obj.group[0].element[109].target[0].code))
        assertTrue(stringMatch("HIC", obj.group[0].element[110].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[110].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[110].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[110].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[110].target[0].product[0].system))
        assertTrue(stringMatch("445085009", obj.group[0].element[110].target[0].product[0].code))
        assertTrue(stringMatch("HYDC", obj.group[0].element[111].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[111].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[111].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[111].target[0].product[0].system))
        assertTrue(stringMatch("55434001", obj.group[0].element[111].target[0].product[0].code))
        assertTrue(stringMatch("IBITE", obj.group[0].element[112].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[112].target[0].equivalence))
        assertTrue(stringMatch("Submit for new term with pare", obj.group[0].element[112].target[0].comment))
        assertTrue(stringMatch("ICYST", obj.group[0].element[113].code))
        assertTrue(stringMatch("309075001", obj.group[0].element[113].target[0].code))
        assertTrue(stringMatch("IDC", obj.group[0].element[114].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[114].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[114].target[0].comment))
        assertTrue(stringMatch("IHG", obj.group[0].element[115].code))
        assertTrue(stringMatch("119337004", obj.group[0].element[115].target[0].code))
        assertTrue(stringMatch("ILEO", obj.group[0].element[116].code))
        assertTrue(stringMatch("258455001", obj.group[0].element[116].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[116].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[116].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[116].target[0].product[0].system))
        assertTrue(stringMatch("419954003", obj.group[0].element[116].target[0].product[0].code))
        assertTrue(stringMatch("ILLEG", obj.group[0].element[117].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[117].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[117].target[0].comment))
        assertTrue(stringMatch("IMP", obj.group[0].element[118].code))
        assertTrue(stringMatch("439961009", obj.group[0].element[118].target[0].code))
        assertTrue(stringMatch("INCI", obj.group[0].element[119].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[119].target[0].code))
        assertTrue(stringMatch("INFIL", obj.group[0].element[120].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[120].target[0].equivalence))
        assertTrue(stringMatch("This describes a morphologic ", obj.group[0].element[120].target[0].comment))
        assertTrue(stringMatch("INS", obj.group[0].element[121].code))
        assertTrue(stringMatch("258614005", obj.group[0].element[121].target[0].code))
        assertTrue(stringMatch("INTRD", obj.group[0].element[122].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[122].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[122].target[0].comment))
        assertTrue(stringMatch("IT", obj.group[0].element[123].code))
        assertTrue(stringMatch("119307008", obj.group[0].element[123].target[0].code))
        assertTrue(stringMatch("IUD", obj.group[0].element[124].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[124].target[0].equivalence))
        assertTrue(stringMatch("pending", obj.group[0].element[124].target[0].comment))
        assertTrue(stringMatch("IVCAT", obj.group[0].element[125].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[125].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[125].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[125].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[125].target[0].product[0].system))
        assertTrue(stringMatch("255560000", obj.group[0].element[125].target[0].product[0].code))
        assertTrue(stringMatch("IVFLD", obj.group[0].element[126].code))
        assertTrue(stringMatch("258649003", obj.group[0].element[126].target[0].code))
        assertTrue(stringMatch("IVTIP", obj.group[0].element[127].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[127].target[0].code))
        assertTrue(stringMatch("JEJU", obj.group[0].element[128].code))
        assertTrue(stringMatch("258463000", obj.group[0].element[128].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[128].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[128].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[128].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[128].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[128].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[128].target[0].product[1].system))
        assertTrue(stringMatch("21306003", obj.group[0].element[128].target[0].product[1].code))
        assertTrue(stringMatch("JNTFLD", obj.group[0].element[129].code))
        assertTrue(stringMatch("119332005", obj.group[0].element[129].target[0].code))
        assertTrue(stringMatch("JP", obj.group[0].element[130].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[130].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[130].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[130].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[130].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[130].target[0].product[0].code))
        assertTrue(stringMatch("KELOI", obj.group[0].element[131].code))
        assertTrue(stringMatch("440674008", obj.group[0].element[131].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[131].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[131].target[0].product[0].system))
        assertTrue(stringMatch("67889009", obj.group[0].element[131].target[0].product[0].code))
        assertTrue(stringMatch("KIDFLD", obj.group[0].element[132].code))
        assertTrue(stringMatch("309051001", obj.group[0].element[132].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[132].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[132].target[0].product[0].system))
        assertTrue(stringMatch("64033007", obj.group[0].element[132].target[0].product[0].code))
        assertTrue(stringMatch("LAVG", obj.group[0].element[133].code))
        assertTrue(stringMatch("258607008", obj.group[0].element[133].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[133].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[133].target[0].product[0].system))
        assertTrue(stringMatch("397394009", obj.group[0].element[133].target[0].product[0].code))
        assertTrue(stringMatch("LAVGG", obj.group[0].element[134].code))
        assertTrue(stringMatch("168138009", obj.group[0].element[134].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[134].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[134].target[0].product[0].system))
        assertTrue(stringMatch("173830003", obj.group[0].element[134].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[134].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[134].target[0].product[1].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[134].target[0].product[1].code))
        assertTrue(stringMatch("LAVGP", obj.group[0].element[135].code))
        assertTrue(stringMatch("440137008", obj.group[0].element[135].target[0].code))
        assertTrue(stringMatch("LAVPG", obj.group[0].element[136].code))
        assertTrue(stringMatch("440674008", obj.group[0].element[136].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[136].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[136].target[0].product[0].system))
        assertTrue(stringMatch("67889009", obj.group[0].element[136].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[136].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[136].target[0].product[1].system))
        assertTrue(stringMatch("44567001", obj.group[0].element[136].target[0].product[1].code))
        assertTrue(stringMatch("LENS1", obj.group[0].element[137].code))
        assertTrue(stringMatch("440473005", obj.group[0].element[137].target[0].code))
        assertTrue(stringMatch("LENS2", obj.group[0].element[138].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[138].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[138].target[0].comment))
        assertTrue(stringMatch("LESN", obj.group[0].element[139].code))
        assertTrue(stringMatch("309049000", obj.group[0].element[139].target[0].code))
        assertTrue(stringMatch("should be more specific what ", obj.group[0].element[139].target[0].comment))
        assertTrue(stringMatch("LIQ", obj.group[0].element[140].code))
        assertTrue(stringMatch("258442002", obj.group[0].element[140].target[0].code))
        assertTrue(stringMatch("LIQO", obj.group[0].element[141].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[141].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[141].target[0].comment))
        assertTrue(stringMatch("LSAC", obj.group[0].element[142].code))
        assertTrue(stringMatch("258450006", obj.group[0].element[142].target[0].code))
        assertTrue(stringMatch("The HL7 term is a historical ", obj.group[0].element[142].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[142].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[142].target[0].product[0].system))
        assertTrue(stringMatch("303949008", obj.group[0].element[142].target[0].product[0].code))
        assertTrue(stringMatch("MAHUR", obj.group[0].element[143].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[143].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[143].target[0].comment))
        assertTrue(stringMatch("MASS", obj.group[0].element[144].code))
        assertTrue(stringMatch("420548004", obj.group[0].element[144].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[144].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[144].target[0].product[0].system))
        assertTrue(stringMatch("4147007", obj.group[0].element[144].target[0].product[0].code))
        assertTrue(stringMatch("MBLD", obj.group[0].element[145].code))
        assertTrue(stringMatch("119345009", obj.group[0].element[145].target[0].code))
        assertTrue(stringMatch("MUCOS", obj.group[0].element[146].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[146].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[146].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[146].target[0].product[0].system))
        assertTrue(stringMatch("414781009", obj.group[0].element[146].target[0].product[0].code))
        assertTrue(stringMatch("MUCUS", obj.group[0].element[147].code))
        assertTrue(stringMatch("258483004", obj.group[0].element[147].target[0].code))
        assertTrue(stringMatch("NASDR", obj.group[0].element[148].code))
        assertTrue(stringMatch("258474009", obj.group[0].element[148].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[148].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[148].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[148].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[148].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[148].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[148].target[0].product[1].system))
        assertTrue(stringMatch("2095001", obj.group[0].element[148].target[0].product[1].code))
        assertTrue(stringMatch("NEDL", obj.group[0].element[149].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[149].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[149].target[0].comment))
        assertTrue(stringMatch("NEPH", obj.group[0].element[150].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[150].target[0].code))
        assertTrue(stringMatch("NGASP", obj.group[0].element[151].code))
        assertTrue(stringMatch("302794003", obj.group[0].element[151].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[151].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[151].target[0].product[0].system))
        assertTrue(stringMatch("6853008", obj.group[0].element[151].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[151].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[151].target[0].product[1].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[151].target[0].product[1].code))
        assertTrue(stringMatch("NGAST", obj.group[0].element[152].code))
        assertTrue(stringMatch("258459007", obj.group[0].element[152].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[152].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[152].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[152].target[0].product[0].system))
        assertTrue(stringMatch("127492001", obj.group[0].element[152].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[152].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[152].target[0].product[1].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[152].target[0].product[1].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[152].target[0].product[2].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[152].target[0].product[2].system))
        assertTrue(stringMatch("69695003", obj.group[0].element[152].target[0].product[2].code))
        assertTrue(stringMatch("NGS", obj.group[0].element[153].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[153].target[0].code))
        assertTrue(stringMatch("NODUL", obj.group[0].element[154].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[154].target[0].equivalence))
        assertTrue(stringMatch("pending", obj.group[0].element[154].target[0].comment))
        assertTrue(stringMatch("NSECR", obj.group[0].element[155].code))
        assertTrue(stringMatch("168141000", obj.group[0].element[155].target[0].code))
        assertTrue(stringMatch("ORH", obj.group[0].element[156].code))
        assertTrue(stringMatch("123038009", obj.group[0].element[156].target[0].code))
        assertTrue(stringMatch("ORL", obj.group[0].element[157].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[157].target[0].equivalence))
        assertTrue(stringMatch("be more precise use ulcer, tu", obj.group[0].element[157].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[157].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[157].target[0].product[0].system))
        assertTrue(stringMatch("74262004", obj.group[0].element[157].target[0].product[0].code))
        assertTrue(stringMatch("OTH", obj.group[0].element[158].code))
        assertTrue(stringMatch("123038009", obj.group[0].element[158].target[0].code))
        assertTrue(stringMatch("PACEM", obj.group[0].element[159].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[159].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[159].target[0].comment))
        assertTrue(stringMatch("PCFL", obj.group[0].element[160].code))
        assertTrue(stringMatch("122571007", obj.group[0].element[160].target[0].code))
        assertTrue(stringMatch("PDSIT", obj.group[0].element[161].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[161].target[0].code))
        assertTrue(stringMatch("PDTS", obj.group[0].element[162].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[162].target[0].equivalence))
        assertTrue(stringMatch("submitted for code", obj.group[0].element[162].target[0].comment))
        assertTrue(stringMatch("PELVA", obj.group[0].element[163].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[163].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[163].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[163].target[0].product[0].system))
        assertTrue(stringMatch("12921003", obj.group[0].element[163].target[0].product[0].code))
        assertTrue(stringMatch("PENIL", obj.group[0].element[164].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[164].target[0].equivalence))
        assertTrue(stringMatch("need to know what kind of les", obj.group[0].element[164].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[164].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[164].target[0].product[0].system))
        assertTrue(stringMatch("18911002", obj.group[0].element[164].target[0].product[0].code))
        assertTrue(stringMatch("PERIA", obj.group[0].element[165].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[165].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[165].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[165].target[0].product[0].system))
        assertTrue(stringMatch("397158004", obj.group[0].element[165].target[0].product[0].code))
        assertTrue(stringMatch("PILOC", obj.group[0].element[166].code))
        assertTrue(stringMatch("119368000", obj.group[0].element[166].target[0].code))
        assertTrue(stringMatch("PINS", obj.group[0].element[167].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[167].target[0].code))
        assertTrue(stringMatch("PIS", obj.group[0].element[168].code))
        assertTrue(stringMatch("258507003", obj.group[0].element[168].target[0].code))
        assertTrue(stringMatch("PLAN", obj.group[0].element[169].code))
        assertTrue(stringMatch("119301009", obj.group[0].element[169].target[0].code))
        assertTrue(stringMatch("PLAS", obj.group[0].element[170].code))
        assertTrue(stringMatch("119361006", obj.group[0].element[170].target[0].code))
        assertTrue(stringMatch("PLB", obj.group[0].element[171].code))
        assertTrue(stringMatch("119305000", obj.group[0].element[171].target[0].code))
        assertTrue(stringMatch("PLEVS", obj.group[0].element[172].code))
        assertTrue(stringMatch("119364003", obj.group[0].element[172].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[172].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[172].target[0].product[0].system))
        assertTrue(stringMatch("255587001", obj.group[0].element[172].target[0].product[0].code))
        assertTrue(stringMatch("PND", obj.group[0].element[173].code))
        assertTrue(stringMatch("258439008", obj.group[0].element[173].target[0].code))
        assertTrue(stringMatch("Historical term -though in th", obj.group[0].element[173].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[173].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[173].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[173].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[173].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[173].target[0].product[1].system))
        assertTrue(stringMatch("13648007", obj.group[0].element[173].target[0].product[1].code))
        assertTrue(stringMatch("POL", obj.group[0].element[174].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[174].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[174].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[174].target[0].product[0].system))
        assertTrue(stringMatch("41329004", obj.group[0].element[174].target[0].product[0].code))
        assertTrue(stringMatch("POPGS", obj.group[0].element[175].code))
        assertTrue(stringMatch("440493002", obj.group[0].element[175].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[175].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[175].target[0].product[0].system))
        assertTrue(stringMatch("6902008", obj.group[0].element[175].target[0].product[0].code))
        assertTrue(stringMatch("POPLG", obj.group[0].element[176].code))
        assertTrue(stringMatch("440493002", obj.group[0].element[176].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[176].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[176].target[0].product[0].system))
        assertTrue(stringMatch("6902008", obj.group[0].element[176].target[0].product[0].code))
        assertTrue(stringMatch("POPLV", obj.group[0].element[177].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[177].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[177].target[0].comment))
        assertTrue(stringMatch("PORTA", obj.group[0].element[178].code))
        assertTrue(stringMatch("119311002", obj.group[0].element[178].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[178].target[0].comment))
        assertTrue(stringMatch("PPP", obj.group[0].element[179].code))
        assertTrue(stringMatch("119362004", obj.group[0].element[179].target[0].code))
        assertTrue(stringMatch("PROST", obj.group[0].element[180].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[180].target[0].code))
        assertTrue(stringMatch("PRP", obj.group[0].element[181].code))
        assertTrue(stringMatch("119363009", obj.group[0].element[181].target[0].code))
        assertTrue(stringMatch("PSC", obj.group[0].element[182].code))
        assertTrue(stringMatch("119368000", obj.group[0].element[182].target[0].code))
        assertTrue(stringMatch("PUNCT", obj.group[0].element[183].code))
        assertTrue(stringMatch("119365002", obj.group[0].element[183].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[183].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[183].target[0].product[0].system))
        assertTrue(stringMatch("129300006", obj.group[0].element[183].target[0].product[0].code))
        assertTrue(stringMatch("PUS", obj.group[0].element[184].code))
        assertTrue(stringMatch("119323008", obj.group[0].element[184].target[0].code))
        assertTrue(stringMatch("PUSFR", obj.group[0].element[185].code))
        assertTrue(stringMatch("119323008", obj.group[0].element[185].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[185].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[185].target[0].product[0].system))
        assertTrue(stringMatch("47002008", obj.group[0].element[185].target[0].product[0].code))
        assertTrue(stringMatch("PUST", obj.group[0].element[186].code))
        assertTrue(stringMatch("119323008", obj.group[0].element[186].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[186].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[186].target[0].product[0].system))
        assertTrue(stringMatch("47002008", obj.group[0].element[186].target[0].product[0].code))
        assertTrue(stringMatch("QC3", obj.group[0].element[187].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[187].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[187].target[0].comment))
        assertTrue(stringMatch("RANDU", obj.group[0].element[188].code))
        assertTrue(stringMatch("278020009", obj.group[0].element[188].target[0].code))
        assertTrue(stringMatch("RBITE", obj.group[0].element[189].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[189].target[0].equivalence))
        assertTrue(stringMatch("Submit for new term with pare", obj.group[0].element[189].target[0].comment))
        assertTrue(stringMatch("RECT", obj.group[0].element[190].code))
        assertTrue(stringMatch("119339001", obj.group[0].element[190].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[190].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[190].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[190].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[190].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[190].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[190].target[0].product[1].system))
        assertTrue(stringMatch("34402009", obj.group[0].element[190].target[0].product[1].code))
        assertTrue(stringMatch("RECTA", obj.group[0].element[191].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[191].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[191].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[191].target[0].product[0].system))
        assertTrue(stringMatch("34402009", obj.group[0].element[191].target[0].product[0].code))
        assertTrue(stringMatch("RENALC", obj.group[0].element[192].code))
        assertTrue(stringMatch("258420003", obj.group[0].element[192].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[192].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[192].target[0].product[0].system))
        assertTrue(stringMatch("64033007", obj.group[0].element[192].target[0].product[0].code))
        assertTrue(stringMatch("RENC", obj.group[0].element[193].code))
        assertTrue(stringMatch("258453008", obj.group[0].element[193].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[193].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[193].target[0].product[0].system))
        assertTrue(stringMatch("64033007", obj.group[0].element[193].target[0].product[0].code))
        assertTrue(stringMatch("RES", obj.group[0].element[194].code))
        assertTrue(stringMatch("258603007", obj.group[0].element[194].target[0].code))
        assertTrue(stringMatch("SAL", obj.group[0].element[195].code))
        assertTrue(stringMatch("119342007", obj.group[0].element[195].target[0].code))
        assertTrue(stringMatch("SCAR", obj.group[0].element[196].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[196].target[0].code))
        assertTrue(stringMatch("SCLV", obj.group[0].element[197].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[197].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[197].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[197].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[197].target[0].product[0].system))
        assertTrue(stringMatch("9454009", obj.group[0].element[197].target[0].product[0].code))
        assertTrue(stringMatch("SCROA", obj.group[0].element[198].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[198].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[198].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[198].target[0].product[0].system))
        assertTrue(stringMatch("20233005", obj.group[0].element[198].target[0].product[0].code))
        assertTrue(stringMatch("SECRE", obj.group[0].element[199].code))
        assertTrue(stringMatch("432825001", obj.group[0].element[199].target[0].code))
        assertTrue(stringMatch("SER", obj.group[0].element[200].code))
        assertTrue(stringMatch("119364003", obj.group[0].element[200].target[0].code))
        assertTrue(stringMatch("SHU", obj.group[0].element[201].code))
        assertTrue(stringMatch("119295008", obj.group[0].element[201].target[0].code))
        assertTrue(stringMatch("Preferred is aspiration with ", obj.group[0].element[201].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[201].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[201].target[0].product[0].system))
        assertTrue(stringMatch("257351008", obj.group[0].element[201].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[201].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[201].target[0].product[1].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[201].target[0].product[1].code))
        assertTrue(stringMatch("SHUNF", obj.group[0].element[202].code))
        assertTrue(stringMatch("446861007", obj.group[0].element[202].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[202].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[202].target[0].product[0].system))
        assertTrue(stringMatch("446860008", obj.group[0].element[202].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[202].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[202].target[0].product[1].system))
        assertTrue(stringMatch("279107003", obj.group[0].element[202].target[0].product[1].code))
        assertTrue(stringMatch("SHUNT", obj.group[0].element[203].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[203].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[203].target[0].comment))
        assertTrue(stringMatch("SITE", obj.group[0].element[204].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[204].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[204].target[0].comment))
        assertTrue(stringMatch("SKBP", obj.group[0].element[205].code))
        assertTrue(stringMatch("309066003", obj.group[0].element[205].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[205].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[205].target[0].product[0].system))
        assertTrue(stringMatch("240977001", obj.group[0].element[205].target[0].product[0].code))
        assertTrue(stringMatch("SKN", obj.group[0].element[206].code))
        assertTrue(stringMatch("119325001", obj.group[0].element[206].target[0].code))
        assertTrue(stringMatch("SMM", obj.group[0].element[207].code))
        assertTrue(stringMatch("420548004", obj.group[0].element[207].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[207].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[207].target[0].product[0].system))
        assertTrue(stringMatch("4147007", obj.group[0].element[207].target[0].product[0].code))
        assertTrue(stringMatch("SNV", obj.group[0].element[208].code))
        assertTrue(stringMatch("119332005", obj.group[0].element[208].target[0].code))
        assertTrue(stringMatch("SPRM", obj.group[0].element[209].code))
        assertTrue(stringMatch("119349003", obj.group[0].element[209].target[0].code))
        assertTrue(stringMatch("SPRP", obj.group[0].element[210].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[210].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[210].target[0].comment))
        assertTrue(stringMatch("SPRPB", obj.group[0].element[211].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[211].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[211].target[0].comment))
        assertTrue(stringMatch("SPS", obj.group[0].element[212].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[212].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[212].target[0].comment))
        assertTrue(stringMatch("SPT", obj.group[0].element[213].code))
        assertTrue(stringMatch("119334006", obj.group[0].element[213].target[0].code))
        assertTrue(stringMatch("SPTC", obj.group[0].element[214].code))
        assertTrue(stringMatch("119335007", obj.group[0].element[214].target[0].code))
        assertTrue(stringMatch("SPTT", obj.group[0].element[215].code))
        assertTrue(stringMatch("258609006", obj.group[0].element[215].target[0].code))
        assertTrue(stringMatch("SPUT1", obj.group[0].element[216].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[216].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[216].target[0].comment))
        assertTrue(stringMatch("SPUTIN", obj.group[0].element[217].code))
        assertTrue(stringMatch("258610001", obj.group[0].element[217].target[0].code))
        assertTrue(stringMatch("SPUTSP", obj.group[0].element[218].code))
        assertTrue(stringMatch("119335007", obj.group[0].element[218].target[0].code))
        assertTrue(stringMatch("STER", obj.group[0].element[219].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[219].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[219].target[0].comment))
        assertTrue(stringMatch("STL", obj.group[0].element[220].code))
        assertTrue(stringMatch("119339001", obj.group[0].element[220].target[0].code))
        assertTrue(stringMatch("STONE", obj.group[0].element[221].code))
        assertTrue(stringMatch("119350003", obj.group[0].element[221].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[221].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[221].target[0].product[0].system))
        assertTrue(stringMatch("64033007", obj.group[0].element[221].target[0].product[0].code))
        assertTrue(stringMatch("SUBMA", obj.group[0].element[222].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[222].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[222].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[222].target[0].product[0].system))
        assertTrue(stringMatch("5713008", obj.group[0].element[222].target[0].product[0].code))
        assertTrue(stringMatch("SUBMX", obj.group[0].element[223].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[223].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[223].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[223].target[0].product[0].system))
        assertTrue(stringMatch("4335006", obj.group[0].element[223].target[0].product[0].code))
        assertTrue(stringMatch("SUMP", obj.group[0].element[224].code))
        assertTrue(stringMatch("446562005", obj.group[0].element[224].target[0].code))
        assertTrue(stringMatch("Historical term - consider wh", obj.group[0].element[224].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[224].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[224].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[224].target[0].product[0].code))
        assertTrue(stringMatch("SUP", obj.group[0].element[225].code))
        assertTrue(stringMatch("122575003", obj.group[0].element[225].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[225].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[225].target[0].product[0].system))
        assertTrue(stringMatch("58088002", obj.group[0].element[225].target[0].product[0].code))
        assertTrue(stringMatch("SUTUR", obj.group[0].element[226].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[226].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[226].target[0].comment))
        assertTrue(stringMatch("SWGZ", obj.group[0].element[227].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[227].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[227].target[0].comment))
        assertTrue(stringMatch("TASP", obj.group[0].element[228].code))
        assertTrue(stringMatch("122877000", obj.group[0].element[228].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[228].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[228].target[0].product[0].system))
        assertTrue(stringMatch("129112001", obj.group[0].element[228].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[228].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[228].target[0].product[1].system))
        assertTrue(stringMatch("44567001", obj.group[0].element[228].target[0].product[1].code))
        assertTrue(stringMatch("TISS", obj.group[0].element[229].code))
        assertTrue(stringMatch("119376003", obj.group[0].element[229].target[0].code))
        assertTrue(stringMatch("TISU", obj.group[0].element[230].code))
        assertTrue(stringMatch("122593002", obj.group[0].element[230].target[0].code))
        assertTrue(stringMatch("TLC", obj.group[0].element[231].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[231].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[231].target[0].comment))
        assertTrue(stringMatch("TRAC", obj.group[0].element[232].code))
        assertTrue(stringMatch("438660002", obj.group[0].element[232].target[0].code))
        assertTrue(stringMatch("TRANS", obj.group[0].element[233].code))
        assertTrue(stringMatch("258538002", obj.group[0].element[233].target[0].code))
        assertTrue(stringMatch("TSERU", obj.group[0].element[234].code))
        assertTrue(stringMatch("119364003", obj.group[0].element[234].target[0].code))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[234].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[234].target[0].product[0].system))
        assertTrue(stringMatch("255588006", obj.group[0].element[234].target[0].product[0].code))
        assertTrue(stringMatch("TSTES", obj.group[0].element[235].code))
        assertTrue(stringMatch("119371008", obj.group[0].element[235].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[235].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[235].target[0].product[0].system))
        assertTrue(stringMatch("279572002", obj.group[0].element[235].target[0].product[0].code))
        assertTrue(stringMatch("TTRA", obj.group[0].element[236].code))
        assertTrue(stringMatch("258480001", obj.group[0].element[236].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[236].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[236].target[0].product[0].system))
        assertTrue(stringMatch("129112001", obj.group[0].element[236].target[0].product[0].code))
    }

    @Test
    fun `conceptmap-example-specimen-type 516 Test`() {
        val json = File("./src/test/resources/model/sample_data/conceptmap-example-specimen-type.json").readTextAndClose()
        val obj = mapper.fromJson(json, ConceptMap::class.java)
        assertTrue(stringMatch("TUBES", obj.group[0].element[237].code))
        assertTrue(stringMatch("119310001", obj.group[0].element[237].target[0].code))
        assertTrue(stringMatch("TUMOR", obj.group[0].element[238].code))
        assertTrue(stringMatch("258435002", obj.group[0].element[238].target[0].code))
        assertTrue(stringMatch("TZANC", obj.group[0].element[239].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[239].target[0].equivalence))
        assertTrue(stringMatch("This is the name of a lab tes", obj.group[0].element[239].target[0].comment))
        assertTrue(stringMatch("UDENT", obj.group[0].element[240].code))
        assertTrue(stringMatch("123038009", obj.group[0].element[240].target[0].code))
        assertTrue(stringMatch("UR", obj.group[0].element[241].code))
        assertTrue(stringMatch("122575003", obj.group[0].element[241].target[0].code))
        assertTrue(stringMatch("URC", obj.group[0].element[242].code))
        assertTrue(stringMatch("122880004", obj.group[0].element[242].target[0].code))
        assertTrue(stringMatch("URINB", obj.group[0].element[243].code))
        assertTrue(stringMatch("122575003", obj.group[0].element[243].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[243].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[243].target[0].product[0].system))
        assertTrue(stringMatch("78533007", obj.group[0].element[243].target[0].product[0].code))
        assertTrue(stringMatch("URINC", obj.group[0].element[244].code))
        assertTrue(stringMatch("446846006", obj.group[0].element[244].target[0].code))
        assertTrue(stringMatch("URINM", obj.group[0].element[245].code))
        assertTrue(stringMatch("258574006", obj.group[0].element[245].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[245].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[245].target[0].product[0].system))
        assertTrue(stringMatch("225271002", obj.group[0].element[245].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[245].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[245].target[0].product[1].system))
        assertTrue(stringMatch("431938005", obj.group[0].element[245].target[0].product[1].code))
        assertTrue(stringMatch("URINN", obj.group[0].element[246].code))
        assertTrue(stringMatch("446277003", obj.group[0].element[246].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[246].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[246].target[0].product[0].system))
        assertTrue(stringMatch("225109005", obj.group[0].element[246].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[246].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[246].target[0].product[1].system))
        assertTrue(stringMatch("25990002", obj.group[0].element[246].target[0].product[1].code))
        assertTrue(stringMatch("URINP", obj.group[0].element[247].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[247].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[247].target[0].comment))
        assertTrue(stringMatch("URT", obj.group[0].element[248].code))
        assertTrue(stringMatch("122565001", obj.group[0].element[248].target[0].code))
        assertTrue(stringMatch("USCOP", obj.group[0].element[249].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[249].target[0].equivalence))
        assertTrue(stringMatch("NEW specimenTERM 7", obj.group[0].element[249].target[0].comment))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[249].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[249].target[0].product[0].system))
        assertTrue(stringMatch("176178006", obj.group[0].element[249].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[249].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[249].target[0].product[1].system))
        assertTrue(stringMatch("89837001", obj.group[0].element[249].target[0].product[1].code))
        assertTrue(stringMatch("USPEC", obj.group[0].element[250].code))
        assertTrue(stringMatch("123038009", obj.group[0].element[250].target[0].code))
        assertTrue(stringMatch("VASTIP", obj.group[0].element[251].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[251].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[251].target[0].comment))
        assertTrue(stringMatch("VENT", obj.group[0].element[252].code))
        assertTrue(stringMatch("119312009", obj.group[0].element[252].target[0].code))
        assertTrue(stringMatch("TBD in detail", obj.group[0].element[252].target[0].comment))
        assertTrue(stringMatch("VITF", obj.group[0].element[253].code))
        assertTrue(stringMatch("258438000", obj.group[0].element[253].target[0].code))
        assertTrue(stringMatch("VOM", obj.group[0].element[254].code))
        assertTrue(stringMatch("122572000", obj.group[0].element[254].target[0].code))
        assertTrue(stringMatch("WASH", obj.group[0].element[255].code))
        assertTrue(stringMatch("440674008", obj.group[0].element[255].target[0].code))
        assertTrue(stringMatch("WASI", obj.group[0].element[256].code))
        assertTrue(stringMatch("122609004", obj.group[0].element[256].target[0].code))
        assertTrue(stringMatch("WAT", obj.group[0].element[257].code))
        assertTrue(stringMatch("119318008", obj.group[0].element[257].target[0].code))
        assertTrue(stringMatch("WB", obj.group[0].element[258].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[258].target[0].equivalence))
        assertTrue(stringMatch("Bloodbanking term ONLY now ma", obj.group[0].element[258].target[0].comment))
        assertTrue(stringMatch("WEN", obj.group[0].element[259].code))
        assertTrue(stringMatch("309075001", obj.group[0].element[259].target[0].code))
        assertTrue(stringMatch("WICK", obj.group[0].element[260].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[260].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[260].target[0].comment))
        assertTrue(stringMatch("WND", obj.group[0].element[261].code))
        assertTrue(stringMatch("119365002", obj.group[0].element[261].target[0].code))
        assertTrue(stringMatch("WNDA", obj.group[0].element[262].code))
        assertTrue(stringMatch("119366001", obj.group[0].element[262].target[0].code))
        assertTrue(stringMatch("WNDD", obj.group[0].element[263].code))
        assertTrue(stringMatch("122566000", obj.group[0].element[263].target[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[263].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[263].target[0].product[0].system))
        assertTrue(stringMatch("122462000", obj.group[0].element[263].target[0].product[0].code))
        assertTrue(stringMatch("WNDE", obj.group[0].element[264].code))
        assertTrue(stringMatch("122568004", obj.group[0].element[264].target[0].code))
        assertTrue(stringMatch("WORM", obj.group[0].element[265].code))
        assertTrue(stringMatch("258618008", obj.group[0].element[265].target[0].code))
        assertTrue(stringMatch("WRT", obj.group[0].element[266].code))
        assertTrue(stringMatch("309068002", obj.group[0].element[266].target[0].code))
        assertTrue(stringMatch("WWA", obj.group[0].element[267].code))
        assertTrue(stringMatch("119318008", obj.group[0].element[267].target[0].code))
        assertTrue(stringMatch("WWO", obj.group[0].element[268].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[268].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[268].target[0].comment))
        assertTrue(stringMatch("WWT", obj.group[0].element[269].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[269].target[0].equivalence))
        assertTrue(stringMatch("TBD", obj.group[0].element[269].target[0].comment))
        assertTrue(stringMatch("CSITE", obj.group[0].element[270].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[270].target[0].equivalence))
        assertTrue(stringMatch("Prefer to have aspirate of th", obj.group[0].element[270].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[270].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[270].target[0].product[0].system))
        assertTrue(stringMatch("119295008", obj.group[0].element[270].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[270].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[270].target[0].product[1].system))
        assertTrue(stringMatch("386144009", obj.group[0].element[270].target[0].product[1].code))
        assertTrue(stringMatch("http://snomed.info/id/3006873", obj.group[0].element[270].target[0].product[2].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[270].target[0].product[2].system))
        assertTrue(stringMatch("14766002", obj.group[0].element[270].target[0].product[2].code))
        assertTrue(stringMatch("CLIPP", obj.group[0].element[271].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[271].target[0].equivalence))
        assertTrue(stringMatch("Be more specific use either: ", obj.group[0].element[271].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[271].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[271].target[0].product[0].system))
        assertTrue(stringMatch("119326000", obj.group[0].element[271].target[0].product[0].code))
        assertTrue(stringMatch("SHU", obj.group[0].element[272].code))
        assertTrue(stringMatch("unmatched", obj.group[0].element[272].target[0].equivalence))
        assertTrue(stringMatch("assume swab from shunt site f", obj.group[0].element[272].target[0].comment))
        assertTrue(stringMatch("TypeModifier", obj.group[0].element[272].target[0].product[0].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[272].target[0].product[0].system))
        assertTrue(stringMatch("438660002", obj.group[0].element[272].target[0].product[0].code))
        assertTrue(stringMatch("http://snomed.info/id/2463800", obj.group[0].element[272].target[0].product[1].property))
        assertTrue(stringMatch("http://snomed.info/sct", obj.group[0].element[272].target[0].product[1].system))
        assertTrue(stringMatch("257351008", obj.group[0].element[272].target[0].product[1].code))
    }

    fun `conceptmap-example-specimen-type Init`(obj: Bundle) {
    }
}
