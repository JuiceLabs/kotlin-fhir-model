package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle198DataTest : DataTests() {
    @Test
    fun `diagnosticreport-examples-general 571 Test`() {
        val json = File("./src/test/resources/model/sample_data/diagnosticreport-examples-general.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("Patient/5", (obj.entry[14].resource!! as DiagnosticReport).subject!!.reference))
        assertEquals("2005-11-07T21:44:17Z", (obj.entry[14].resource!! as DiagnosticReport).effectiveDateTime.toString())
        assertEquals("2005-11-07T23:38:01Z", (obj.entry[14].resource!! as DiagnosticReport).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.entry[14].resource!! as DiagnosticReport).performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.entry[14].resource!! as DiagnosticReport).performer[0].actor.display))
        assertTrue(stringMatch("URINE, CLEAN CATCH/MIDSTREAM", (obj.entry[14].resource!! as DiagnosticReport).specimen[0].display))
        assertTrue(stringMatch("#o1", (obj.entry[14].resource!! as DiagnosticReport).result[0].reference))
        assertTrue(stringMatch("#o2", (obj.entry[14].resource!! as DiagnosticReport).result[1].reference))
        assertTrue(stringMatch("#o3", (obj.entry[14].resource!! as DiagnosticReport).result[2].reference))
        assertTrue(stringMatch("#o4", (obj.entry[14].resource!! as DiagnosticReport).result[3].reference))
        assertTrue(stringMatch("#o5", (obj.entry[14].resource!! as DiagnosticReport).result[4].reference))
        assertTrue(stringMatch("#o6", (obj.entry[14].resource!! as DiagnosticReport).result[5].reference))
        assertTrue(stringMatch("#o7", (obj.entry[14].resource!! as DiagnosticReport).result[6].reference))
        assertTrue(stringMatch("#o8", (obj.entry[14].resource!! as DiagnosticReport).result[7].reference))
        assertTrue(stringMatch("#o9", (obj.entry[14].resource!! as DiagnosticReport).result[8].reference))
        assertTrue(stringMatch("#o10", (obj.entry[14].resource!! as DiagnosticReport).result[9].reference))
        assertTrue(stringMatch("#o11", (obj.entry[14].resource!! as DiagnosticReport).result[10].reference))
        assertTrue(stringMatch("#o12", (obj.entry[14].resource!! as DiagnosticReport).result[11].reference))
        assertTrue(stringMatch("#o13", (obj.entry[14].resource!! as DiagnosticReport).result[12].reference))
        assertTrue(stringMatch("#o14", (obj.entry[14].resource!! as DiagnosticReport).result[13].reference))
        assertTrue(stringMatch("#o15", (obj.entry[14].resource!! as DiagnosticReport).result[14].reference))
        assertTrue(stringMatch("#o16", (obj.entry[14].resource!! as DiagnosticReport).result[15].reference))
        assertTrue(stringMatch("#o17", (obj.entry[14].resource!! as DiagnosticReport).result[16].reference))
        assertTrue(stringMatch("#o18", (obj.entry[14].resource!! as DiagnosticReport).result[17].reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Diagnosti", obj.entry[15].fullUrl))
        assertTrue(stringMatch("DiagnosticReport", (obj.entry[15].resource!! as DiagnosticReport).resourceType))
        assertTrue(stringMatch("26", (obj.entry[15].resource!! as DiagnosticReport).id))
        assertEquals("2012-04-14T10:35:23Z", (obj.entry[15].resource!! as DiagnosticReport).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[15].resource!! as DiagnosticReport).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[15].resource!! as DiagnosticReport).text!!.div))
        assertTrue(stringMatch("Observation", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).resourceType))
        assertTrue(stringMatch("o1", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).id))
        assertTrue(stringMatch("final", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].system))
        assertTrue(stringMatch("20507-0", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].code))
        assertTrue(stringMatch("Reagin Ab [Presence] in Serum", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].display))
        assertTrue(stringMatch("Patient/6", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).performer[0].display))
        assertTrue(stringMatch("Non-reactive", ((obj.entry[15].resource!! as DiagnosticReport).contained[0] as Observation).valueString))
        assertTrue(stringMatch("http://acme.com/lab/reports", (obj.entry[15].resource!! as DiagnosticReport).identifier[0].system))
        assertTrue(stringMatch("5234342", (obj.entry[15].resource!! as DiagnosticReport).identifier[0].value))
        assertTrue(stringMatch("final", (obj.entry[15].resource!! as DiagnosticReport).status))
        assertTrue(stringMatch("http://acme.com/labs/reports", (obj.entry[15].resource!! as DiagnosticReport).code.coding[0].system))
        assertTrue(stringMatch("142080", (obj.entry[15].resource!! as DiagnosticReport).code.coding[0].code))
        assertTrue(stringMatch("Rapid Plasma Reagin", (obj.entry[15].resource!! as DiagnosticReport).code.coding[0].display))
        assertTrue(stringMatch("RPR", (obj.entry[15].resource!! as DiagnosticReport).code.text))
        assertTrue(stringMatch("Patient/6", (obj.entry[15].resource!! as DiagnosticReport).subject!!.reference))
        assertEquals("2005-03-07T14:02:17Z", (obj.entry[15].resource!! as DiagnosticReport).effectiveDateTime.toString())
        assertEquals("2005-03-07T14:02:01Z", (obj.entry[15].resource!! as DiagnosticReport).issued.toString())
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", (obj.entry[15].resource!! as DiagnosticReport).performer[0].actor.reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", (obj.entry[15].resource!! as DiagnosticReport).performer[0].actor.display))
        assertTrue(stringMatch("#o1", (obj.entry[15].resource!! as DiagnosticReport).result[0].reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Diagnosti", obj.entry[16].fullUrl))
        assertTrue(stringMatch("DiagnosticReport", (obj.entry[16].resource!! as DiagnosticReport).resourceType))
        assertTrue(stringMatch("27", (obj.entry[16].resource!! as DiagnosticReport).id))
        assertEquals("2012-05-23T14:27:01Z", (obj.entry[16].resource!! as DiagnosticReport).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[16].resource!! as DiagnosticReport).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[16].resource!! as DiagnosticReport).text!!.div))
        assertTrue(stringMatch("Observation", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).resourceType))
        assertTrue(stringMatch("o1", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).id))
        assertTrue(stringMatch("final", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).status))
        assertTrue(stringMatch("http://loinc.org", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].system))
        assertTrue(stringMatch("30522-7", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].code))
        assertTrue(stringMatch("C reactive protein [Mass/volu", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[0].display))
        assertTrue(stringMatch("http://snomed.info/sct", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[1].system))
        assertTrue(stringMatch("55235003", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).code.coding[1].code))
        assertTrue(stringMatch("hsCRP", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).code.text))
        assertTrue(stringMatch("Patient/1", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).subject!!.reference))
        assertTrue(stringMatch("Organization/1832473e-2fe0-45", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).performer[0].reference))
        assertTrue(stringMatch("Acme Laboratory, Inc", ((obj.entry[16].resource!! as DiagnosticReport).contained[0] as Observation).performer[0].display))
    }
}
