package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle34DataTest : DataTests() {
    @Test
    fun `questionnaire-profile-example-ussg-fht 403 Test`() {
        val json = File("./src/test/resources/model/sample_data/questionnaire-profile-example-ussg-fht.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("1.1.7", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].definition))
        assertTrue(stringMatch("Height", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].text))
        assertTrue(stringMatch("decimal", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].required != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].required else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].required")
        assertTrue(stringMatch("1.1.7.1.1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].item[0].linkId))
        assertTrue(stringMatch("Units", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].item[0].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].item[0].type))
        assertTrue(stringMatch("#length", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[6].item[0].options!!.reference))
        assertTrue(stringMatch("1.1.8", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].definition))
        assertTrue(stringMatch("Weight", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].text))
        assertTrue(stringMatch("decimal", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].type))
        assertTrue(stringMatch("1.1.8.1.1", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].item[0].linkId))
        assertTrue(stringMatch("Units", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].item[0].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].item[0].type))
        assertTrue(stringMatch("#weight", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[7].item[0].options!!.reference))
        assertTrue(stringMatch("1.1.9", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].definition))
        assertTrue(stringMatch("Body mass index (BMI) [Ratio]", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].text))
        assertTrue(stringMatch("decimal", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].readOnly != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].readOnly else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[8].readOnly")
        assertTrue(stringMatch("1.1.10", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].definition))
        assertTrue(stringMatch("Race", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].required != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].required else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].required")
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].options!!.reference))
        assertTrue(stringMatch("USSG-FHT race", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[9].options!!.display))
        assertTrue(stringMatch("1.1.11", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].definition))
        assertTrue(stringMatch("Ethnicity", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].repeats != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].repeats else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].repeats")
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].options!!.reference))
        assertTrue(stringMatch("USSG-FHT ethnicity", (obj.entry[1].resource!! as Questionnaire).item[1].item[0].item[10].options!!.display))
        assertTrue(stringMatch("1.2", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].definition))
        assertTrue(stringMatch("Your diseases history", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].text))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[1].item[1].repeats != null) (obj.entry[1].resource!! as Questionnaire).item[1].item[1].repeats else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[1].item[1].repeats")
        assertTrue(stringMatch("1.2.1", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[0].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[0].definition))
        assertTrue(stringMatch("Disease or Condition", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[0].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[0].type))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[0].options!!.reference))
        assertTrue(stringMatch("USSG-FHT diseases", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[0].options!!.display))
        assertTrue(stringMatch("1.2.2", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[1].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[1].definition))
        assertTrue(stringMatch("Age at Diagnosis", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[1].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[1].type))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[1].options!!.reference))
        assertTrue(stringMatch("USSG-FHT age", (obj.entry[1].resource!! as Questionnaire).item[1].item[1].item[1].options!!.display))
        assertTrue(stringMatch("2", (obj.entry[1].resource!! as Questionnaire).item[2].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[2].definition))
        assertTrue(stringMatch("Family member health informat", (obj.entry[1].resource!! as Questionnaire).item[2].text))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[2].type))
        assertEquals(true, if ((obj.entry[1].resource!! as Questionnaire).item[2].repeats != null) (obj.entry[1].resource!! as Questionnaire).item[2].repeats else false, "Field: (obj.entry[1].resource!! as Questionnaire).item[2].repeats")
        assertTrue(stringMatch("2.1", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].linkId))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].type))
        assertTrue(stringMatch("2.1.1", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].linkId))
        assertTrue(stringMatch("group", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].type))
        assertTrue(stringMatch("2.1.1.1", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[0].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[0].definition))
        assertTrue(stringMatch("Relationship to you", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[0].text))
        assertTrue(stringMatch("choice", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[0].type))
        assertTrue(stringMatch("http://hl7.org/fhir/us/sdc/Va", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[0].options!!.reference))
        assertTrue(stringMatch("USSG-FHT relationship", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[0].options!!.display))
        assertTrue(stringMatch("2.1.1.2", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[1].linkId))
        assertTrue(stringMatch("http://loinc.org/fhir/DataEle", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[1].definition))
        assertTrue(stringMatch("Name", (obj.entry[1].resource!! as Questionnaire).item[2].item[0].item[0].item[1].text))
    }
}
