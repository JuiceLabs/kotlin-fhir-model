package com.juicelabs.fhir.model

import java.io.File
import kotlin.test.assertEquals
import kotlin.test.assertTrue
import org.junit.jupiter.api.Test

class Bundle100DataTest : DataTests() {
    @Test
    fun `patient-examples-cypress-template 471 Test`() {
        val json = File("./src/test/resources/model/sample_data/patient-examples-cypress-template.json").readTextAndClose()
        val obj = mapper.fromJson(json, Bundle::class.java)
        assertTrue(stringMatch("Organization/1", (obj.entry[219].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/2", obj.entry[220].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[220].resource!! as Patient).resourceType))
        assertTrue(stringMatch("291", (obj.entry[220].resource!! as Patient).id))
        assertEquals("2012-06-03T23:45:32Z", (obj.entry[220].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[220].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[220].resource!! as Patient).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[220].resource!! as Patient).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[220].resource!! as Patient).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("https://github.com/projectcyp", (obj.entry[220].resource!! as Patient).identifier[0].system))
        assertTrue(stringMatch("577610", (obj.entry[220].resource!! as Patient).identifier[0].value))
        assertEquals(true, if ((obj.entry[220].resource!! as Patient).active != null) (obj.entry[220].resource!! as Patient).active else false, "Field: (obj.entry[220].resource!! as Patient).active")
        assertTrue(stringMatch("official", (obj.entry[220].resource!! as Patient).name[0].use))
        assertTrue(stringMatch("Lewis", (obj.entry[220].resource!! as Patient).name[0].family))
        assertTrue(stringMatch("Marcia", (obj.entry[220].resource!! as Patient).name[0].given[0]))
        assertTrue(stringMatch("female", (obj.entry[220].resource!! as Patient).gender))
        assertEquals("1966-01-26", (obj.entry[220].resource!! as Patient).birthDate.toString())
        assertTrue(stringMatch("Organization/1", (obj.entry[220].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/2", obj.entry[221].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[221].resource!! as Patient).resourceType))
        assertTrue(stringMatch("292", (obj.entry[221].resource!! as Patient).id))
        assertEquals("2012-06-03T23:45:32Z", (obj.entry[221].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[221].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[221].resource!! as Patient).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[221].resource!! as Patient).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[221].resource!! as Patient).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("https://github.com/projectcyp", (obj.entry[221].resource!! as Patient).identifier[0].system))
        assertTrue(stringMatch("577611", (obj.entry[221].resource!! as Patient).identifier[0].value))
        assertEquals(true, if ((obj.entry[221].resource!! as Patient).active != null) (obj.entry[221].resource!! as Patient).active else false, "Field: (obj.entry[221].resource!! as Patient).active")
        assertTrue(stringMatch("official", (obj.entry[221].resource!! as Patient).name[0].use))
        assertTrue(stringMatch("Castro", (obj.entry[221].resource!! as Patient).name[0].family))
        assertTrue(stringMatch("Peter", (obj.entry[221].resource!! as Patient).name[0].given[0]))
        assertTrue(stringMatch("male", (obj.entry[221].resource!! as Patient).gender))
        assertEquals("1992-05-02", (obj.entry[221].resource!! as Patient).birthDate.toString())
        assertTrue(stringMatch("Organization/1", (obj.entry[221].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/2", obj.entry[222].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[222].resource!! as Patient).resourceType))
        assertTrue(stringMatch("293", (obj.entry[222].resource!! as Patient).id))
        assertEquals("2012-06-03T23:45:32Z", (obj.entry[222].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[222].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[222].resource!! as Patient).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[222].resource!! as Patient).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[222].resource!! as Patient).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("https://github.com/projectcyp", (obj.entry[222].resource!! as Patient).identifier[0].system))
        assertTrue(stringMatch("577612", (obj.entry[222].resource!! as Patient).identifier[0].value))
        assertEquals(true, if ((obj.entry[222].resource!! as Patient).active != null) (obj.entry[222].resource!! as Patient).active else false, "Field: (obj.entry[222].resource!! as Patient).active")
        assertTrue(stringMatch("official", (obj.entry[222].resource!! as Patient).name[0].use))
        assertTrue(stringMatch("Williams", (obj.entry[222].resource!! as Patient).name[0].family))
        assertTrue(stringMatch("Gerald", (obj.entry[222].resource!! as Patient).name[0].given[0]))
        assertTrue(stringMatch("male", (obj.entry[222].resource!! as Patient).gender))
        assertEquals("1982-10-07", (obj.entry[222].resource!! as Patient).birthDate.toString())
        assertTrue(stringMatch("Organization/1", (obj.entry[222].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/2", obj.entry[223].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[223].resource!! as Patient).resourceType))
        assertTrue(stringMatch("294", (obj.entry[223].resource!! as Patient).id))
        assertEquals("2012-06-03T23:45:32Z", (obj.entry[223].resource!! as Patient).meta!!.lastUpdated.toString())
        assertTrue(stringMatch("generated", (obj.entry[223].resource!! as Patient).text!!.status))
        assertTrue(stringMatch("<div xmlns=\"http://www.w3.org", (obj.entry[223].resource!! as Patient).text!!.div))
        assertTrue(stringMatch("http://hl7.org/fhir/v2/0203", (obj.entry[223].resource!! as Patient).identifier[0].type!!.coding[0].system))
        assertTrue(stringMatch("SS", (obj.entry[223].resource!! as Patient).identifier[0].type!!.coding[0].code))
        assertTrue(stringMatch("https://github.com/projectcyp", (obj.entry[223].resource!! as Patient).identifier[0].system))
        assertTrue(stringMatch("577613", (obj.entry[223].resource!! as Patient).identifier[0].value))
        assertEquals(true, if ((obj.entry[223].resource!! as Patient).active != null) (obj.entry[223].resource!! as Patient).active else false, "Field: (obj.entry[223].resource!! as Patient).active")
        assertTrue(stringMatch("official", (obj.entry[223].resource!! as Patient).name[0].use))
        assertTrue(stringMatch("Fuller", (obj.entry[223].resource!! as Patient).name[0].family))
        assertTrue(stringMatch("Dianne", (obj.entry[223].resource!! as Patient).name[0].given[0]))
        assertTrue(stringMatch("female", (obj.entry[223].resource!! as Patient).gender))
        assertEquals("1965-06-30", (obj.entry[223].resource!! as Patient).birthDate.toString())
        assertTrue(stringMatch("Organization/1", (obj.entry[223].resource!! as Patient).managingOrganization!!.reference))
        assertTrue(stringMatch("http://hl7.org/fhir/Patient/2", obj.entry[224].fullUrl))
        assertTrue(stringMatch("Patient", (obj.entry[224].resource!! as Patient).resourceType))
    }
}
